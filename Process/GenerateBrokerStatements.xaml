<Activity mc:Ignorable="sap sap2010" x:Class="SendBrokerStatements" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:bes="clr-namespace:BalaReva.Excel.Sheets;assembly=BalaReva.Excel" xmlns:beu="clr-namespace:BalaReva.Excel.Utilities;assembly=BalaReva.Excel.Utilities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:t="clr-namespace:Talbot_DateTime_CustomActivity;assembly=Talbot_DateTime_CustomActivity" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_LocalInputFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="in_dt_BnkStmtReqCols" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_LocalTemplateFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="in_ConfigFilePath" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>654,2801</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>SendBrokerStatements_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>BalaReva.Excel.Sheets</x:String>
      <x:String>BalaReva.Excel.Base</x:String>
      <x:String>Talbot_DateTime_CustomActivity</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>BalaReva.Excel</AssemblyReference>
      <AssemblyReference>Talbot_DateTime_CustomActivity</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="If new month, then bot will generate broker statements, send them to respective brokers and update the master log." DisplayName="SendBrokerStatements" sap:VirtualizedContainerService.HintSize="558,2736" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="FileExists" />
      <Variable x:TypeArguments="si:FileInfo" Name="AgedDebtFileInfo" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="Lst_AllSheets" />
      <Variable x:TypeArguments="ui:DatabaseConnection" Name="Dbconnection" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_AgedDebtData" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_UnwantedCols" />
      <Variable x:TypeArguments="x:Int32" Name="RowCounter" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Temp" />
      <Variable x:TypeArguments="x:Int32" Name="ColIndex" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_BrokerDetails" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_MasterLogData" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_FilteredData" />
      <Variable x:TypeArguments="x:String" Name="LatestBrokerName" />
      <Variable x:TypeArguments="s:String[]" Name="arr_Files" />
      <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="AttachmentsList" />
      <Variable x:TypeArguments="x:String" Name="ConnectionString" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_BkrMissing" />
      <Variable x:TypeArguments="x:String" Name="ReqCellRef" />
      <Variable x:TypeArguments="s:DateTime" Name="firstDate" />
      <Variable x:TypeArguments="s:DateTime" Name="lastDate" />
      <Variable x:TypeArguments="x:Int32" Name="workingDayCount" />
      <Variable x:TypeArguments="x:String" Name="LatestBrokerCode" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="496,141" sap2010:WorkflowViewState.IdRef="LogMessage_65" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Generate broker statements: Started&quot;]" />
    <Sequence sap2010:Annotation.AnnotationText="Check for Aged debt daily file.&#xA;If present, copy file to local input folder and read the data if last modified is current day. Delete unwanted columns.&#xA;If absent, send exception email and stop." DisplayName="Aged Debt Daily file" sap:VirtualizedContainerService.HintSize="496,153" sap2010:WorkflowViewState.IdRef="Sequence_6">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="510,141" sap2010:WorkflowViewState.IdRef="LogMessage_24" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Aged debt daily file: Started&quot;]" />
      <ui:FileExistsX DisplayName="Check for Aged Debt file" Exists="[FileExists]" sap:VirtualizedContainerService.HintSize="510,52" sap2010:WorkflowViewState.IdRef="FileExistsX_1" Path="[in_Config(&quot;AgedDebtFilePath&quot;).ToString]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:FileExistsX>
      <If Condition="[FileExists]" DisplayName="If - Exists" sap:VirtualizedContainerService.HintSize="510,52" sap2010:WorkflowViewState.IdRef="If_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="376,502" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_26" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Aged debt file: Found&quot;]" />
            <ui:CopyFile ContinueOnError="{x:Null}" Destination="[in_LocalInputFolderPath + &quot;\&quot; + Path.GetFileName(in_Config(&quot;AgedDebtFilePath&quot;).ToString)]" DisplayName="Copy Aged Debt File" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="[in_Config(&quot;AgedDebtFilePath&quot;).ToString]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:CopyFile>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Aged Debt file copied to local inputs folder&quot;]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:LogMessage>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap:VirtualizedContainerService.HintSize="376,721" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_27" Level="[UiPath.Core.Activities.LogLevel.Warn]" Message="[&quot;Aged debt file: Not Found&quot;]" />
            <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" ContinueOnError="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="[in_Config(&quot;ReportExceptionMailBody&quot;).ToString.Replace(&quot;name&quot;,System.Environment.UserName).Replace(&quot;fileName&quot;,&quot;Aged Debt Daily&quot;)]" DisplayName="System exception mail" sap:VirtualizedContainerService.HintSize="334,146" sap2010:WorkflowViewState.IdRef="SendOutlookMail_1" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" SentOnBehalfOfName="[in_Config(&quot;SentOnBehalf&quot;).ToString]" Subject="[in_Config(&quot;ReportExceptionMailSubject&quot;).ToString]" To="[in_Config(&quot;NotificationEmailID&quot;).ToString]">
              <ui:SendOutlookMail.Files>
                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                  <InArgument x:TypeArguments="x:String" />
                </scg:List>
              </ui:SendOutlookMail.Files>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:SendOutlookMail>
            <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="334,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Collect" TargetType="s:GC">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </InvokeMethod>
            <Throw Exception="[new BusinessRuleException(&quot;Aged Debt Daily file not found in specified shared drive location&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_1" />
          </Sequence>
        </If.Else>
      </If>
      <ui:GetFileInfoX DisplayName="Get File Info" FilePath="[in_LocalInputFolderPath + &quot;\&quot; + Path.GetFileName(in_Config(&quot;AgedDebtFilePath&quot;).ToString)]" sap:VirtualizedContainerService.HintSize="510,52" sap2010:WorkflowViewState.IdRef="GetFileInfoX_1" Output="[AgedDebtFileInfo]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:GetFileInfoX>
      <If Condition="[DateTime.ParseExact(AgedDebtFileInfo.LastWriteTime.ToString,&quot;MM/dd/yyyy HH:mm:ss&quot;, System.Globalization.CultureInfo.InvariantCulture).ToString(&quot;dd-MM-yyyy&quot;) = Today.ToString(&quot;dd-MM-yyyy&quot;)]" DisplayName="If - Modified today" sap:VirtualizedContainerService.HintSize="510,1622" sap2010:WorkflowViewState.IdRef="If_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="476,719" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_28" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Aged debt file modified today&quot;]" />
            <Assign sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[ConnectionString]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">["Dsn=Excel Files;dbq=" + in_LocalInputFolderPath + "\" + Path.GetFileName(in_Config("AgedDebtFilePath").ToString) + ";defaultdir=" + (in_LocalInputFolderPath + "\" + Path.GetFileName(in_Config("AgedDebtFilePath").ToString)).Replace("\" + Path.GetFileName(in_LocalInputFolderPath + "\" + Path.GetFileName(in_Config("AgedDebtFilePath").ToString)),"") + ";driverid=1046;maxbuffersize=2048;pagetimeout=5"]</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
            <ui:DatabaseConnect DisplayName="Connect to database" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="DatabaseConnect_1" ProviderName="System.Data.Odbc" ConnectionString="[ConnectionString]" DatabaseConnection="[Dbconnection]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:DatabaseConnect>
            <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" DataTable="[dt_AgedDebtData]" DisplayName="Run query - Get Filtered data" ExistingDbConnection="[DbConnection]" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1" Sql="[in_Config(&quot;ADQuery&quot;).ToString]">
              <ui:ExecuteQuery.Parameters>
                <scg:Dictionary x:TypeArguments="x:String, Argument" />
              </ui:ExecuteQuery.Parameters>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExecuteQuery>
            <ui:DatabaseDisconnect DatabaseConnection="[DbConnection]" DisplayName="Disconnect connection" sap:VirtualizedContainerService.HintSize="434,25" sap2010:WorkflowViewState.IdRef="DatabaseDisconnect_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:DatabaseDisconnect>
            <ui:SortDataTable ColumnIndex="{x:Null}" DataColumn="{x:Null}" ColumnName="[in_Config(&quot;BSBrokerColName&quot;).ToString]" DataTable="[dt_AgedDebtData]" DisplayName="Sort - Aged Debt DT" sap:VirtualizedContainerService.HintSize="434,80" sap2010:WorkflowViewState.IdRef="SortDataTable_1" Order="Ascending" OutputDataTable="[dt_AgedDebtData]" SortOrder="Ascending">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:SortDataTable>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap:VirtualizedContainerService.HintSize="376,721" sap2010:WorkflowViewState.IdRef="Sequence_5">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_29" Level="[UiPath.Core.Activities.LogLevel.Warn]" Message="[&quot;Aged debt file not modified today&quot;]" />
            <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" ContinueOnError="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="[in_Config(&quot;FileUnmodifiedMailBody&quot;).ToString.Replace(&quot;name&quot;,System.Environment.UserName)]" DisplayName="System exception mail" sap:VirtualizedContainerService.HintSize="334,146" sap2010:WorkflowViewState.IdRef="SendOutlookMail_2" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" SentOnBehalfOfName="[in_Config(&quot;SentOnBehalf&quot;).ToString]" Subject="[in_Config(&quot;FileUnmodifiedMailSubject&quot;).ToString]" To="[in_Config(&quot;NotificationEmailID&quot;).ToString]">
              <ui:SendOutlookMail.Files>
                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                  <InArgument x:TypeArguments="x:String" />
                </scg:List>
              </ui:SendOutlookMail.Files>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:SendOutlookMail>
            <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="334,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="Collect" TargetType="s:GC">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </InvokeMethod>
            <Throw Exception="[new BusinessRuleException(&quot;Aged Debt Daily file has not been updated&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_2" />
          </Sequence>
        </If.Else>
      </If>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="510,141" sap2010:WorkflowViewState.IdRef="LogMessage_25" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Aged debt daily file: Completed&quot;]" />
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Check for Year and Month folder in Broker Statements folder.&#xA;If already created, proceed to next step.&#xA;Else create folders." DisplayName="Create Year and Month folder" sap:VirtualizedContainerService.HintSize="496,138" sap2010:WorkflowViewState.IdRef="Sequence_9">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_30" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Create year and month folder: Started&quot;]" />
      <ui:FolderExistsX DisplayName="Check for Year folder" Exists="[FileExists]" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="FolderExistsX_1" Path="[in_Config(&quot;BrokerStatementsFolderPath&quot;).ToString.Replace(&quot;\MC. MMMM&quot;,&quot;&quot;).Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;))]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:FolderExistsX>
      <If Condition="[FileExists]" DisplayName="If - Exists" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="If_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Year folder already present&quot;]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:LogMessage>
        </If.Then>
        <If.Else>
          <Sequence sap:VirtualizedContainerService.HintSize="376,349" sap2010:WorkflowViewState.IdRef="Sequence_7">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Year Folder" sap:VirtualizedContainerService.HintSize="334,80" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[in_Config(&quot;BrokerStatementsFolderPath&quot;).ToString.Replace(&quot;\MC. MMMM&quot;,&quot;&quot;).Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;))]" />
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Year folder created&quot;]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:LogMessage>
          </Sequence>
        </If.Else>
      </If>
      <ui:FolderExistsX DisplayName="Check for Month folder" Exists="[FileExists]" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="FolderExistsX_2" Path="[in_Config(&quot;BrokerStatementsFolderPath&quot;).ToString.Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;)).Replace(&quot;MMMM&quot;,Today.ToString(&quot;MMMM&quot;)).Replace(&quot;MC&quot;,Today.Month.ToString)]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:FolderExistsX>
      <If Condition="[FileExists]" DisplayName="If - Exists" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="If_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Month folder already present&quot;]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:LogMessage>
        </If.Then>
        <If.Else>
          <Sequence sap:VirtualizedContainerService.HintSize="376,349" sap2010:WorkflowViewState.IdRef="Sequence_8">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Month Folder" sap:VirtualizedContainerService.HintSize="334,80" sap2010:WorkflowViewState.IdRef="CreateDirectory_2" Path="[in_Config(&quot;BrokerStatementsFolderPath&quot;).ToString.Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;)).Replace(&quot;MMMM&quot;,Today.ToString(&quot;MMMM&quot;)).Replace(&quot;MC&quot;,Today.Month.ToString)]" />
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Month folder created&quot;]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:LogMessage>
          </Sequence>
        </If.Else>
      </If>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_31" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Create year and month folder: Completed&quot;]" />
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Copy Aged Debt Daily file into current month folder." DisplayName="Copy Aged Debt file" sap:VirtualizedContainerService.HintSize="496,112" sap2010:WorkflowViewState.IdRef="Sequence_10">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_32" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Copy aged debt file: Started&quot;]" />
      <ui:CopyFile ContinueOnError="{x:Null}" Destination="[in_Config(&quot;BrokerStatementsFolderPath&quot;).ToString.Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;)).Replace(&quot;MMMM&quot;,Today.ToString(&quot;MMMM&quot;)).Replace(&quot;MC&quot;,Today.Month.ToString) + &quot;\&quot; + in_Config(&quot;AgedDebtNewFileName&quot;).ToString.Replace(&quot;dd.MM.yy&quot;,Today.ToString(&quot;dd.MM.yy&quot;)) + &quot;.xlsx&quot;]" DisplayName="Copy Aged Debt File" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="CopyFile_2" Overwrite="True" Path="[in_Config(&quot;AgedDebtFilePath&quot;).ToString]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:CopyFile>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Aged Debt file copied to current month folder&quot;]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_33" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Copy aged debt file: Completed&quot;]" />
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Bot will check if the Broker Master Log is present for the current, if not present it will create one" DisplayName="Check and Create Broker Master Log" sap:VirtualizedContainerService.HintSize="496,123" sap2010:WorkflowViewState.IdRef="Sequence_15">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="410,141" sap2010:WorkflowViewState.IdRef="LogMessage_34" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Check and create Broker Master log: Started&quot;]" />
      <ui:FileExistsX DisplayName="Check for Master Log" Exists="[FileExists]" sap:VirtualizedContainerService.HintSize="410,52" sap2010:WorkflowViewState.IdRef="FileExistsX_2" Path="[in_Config(&quot;MasterLogFilePath&quot;).ToString.Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;))]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:FileExistsX>
      <If Condition="[FileExists]" DisplayName="If - Exists" sap:VirtualizedContainerService.HintSize="410,1916" sap2010:WorkflowViewState.IdRef="If_6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="376,686" sap2010:WorkflowViewState.IdRef="Sequence_13">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Master Log found&quot;]" />
            <ui:CopyFile ContinueOnError="{x:Null}" Destination="[in_LocalInputFolderPath + &quot;\&quot; + Path.GetFileName(in_Config(&quot;MasterLogFilePath&quot;).ToString.Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;)))]" DisplayName="Copy Master Log" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="CopyFile_3" Overwrite="True" Path="[in_Config(&quot;MasterLogFilePath&quot;).ToString.Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;))]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:CopyFile>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Master Log copied to local inputs folder&quot;]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:LogMessage>
            <ui:ExcelApplicationScope Password="{x:Null}" SensitivityLabel="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Get sheets - Master Log Template" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" SensitivityOperation="None" Visible="False" WorkbookPath="[in_LocalInputFolderPath + &quot;\&quot; + Path.GetFileName(in_Config(&quot;MasterLogFilePath&quot;).ToString.Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;)))]">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <ui:ExcelGetWorkbookSheets DisplayName="Get all sheets" sap:VirtualizedContainerService.HintSize="334,25" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_1" Sheets="[Lst_AllSheets]" />
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelApplicationScope>
            <If Condition="[not Lst_AllSheets.Contains(Today.ToString(&quot;MMMM yyyy&quot;))]" DisplayName="If - No current month sheet" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="If_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <ui:ExcelApplicationScope Password="{x:Null}" SensitivityLabel="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Excel - Master Log Template" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" SensitivityOperation="None" Visible="False" WorkbookPath="[in_LocalTemplateFolderPath + &quot;\&quot; + Path.GetFileName(in_Config(&quot;MasterLogTemplatePath&quot;).ToString)]">
                  <ui:ExcelApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                      </ActivityAction.Argument>
                      <Sequence sap:VirtualizedContainerService.HintSize="400,399" sap2010:WorkflowViewState.IdRef="Sequence_11">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExcelCopySheet DestinationFilePath="[in_LocalInputFolderPath + &quot;\&quot; + Path.GetFileName(in_Config(&quot;MasterLogFilePath&quot;).ToString.Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;)))]" DestinationSheetName="[Today.ToString(&quot;MMMM yyyy&quot;)]" DisplayName="Copy New month sheet" sap:VirtualizedContainerService.HintSize="338,89" sap2010:WorkflowViewState.IdRef="ExcelCopySheet_1" SheetName="MMMM yyyy" />
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,148" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Current month sheet created&quot;]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:LogMessage>
                      </Sequence>
                    </ActivityAction>
                  </ui:ExcelApplicationScope.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelApplicationScope>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="380,547" sap2010:WorkflowViewState.IdRef="Sequence_12">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" ContinueOnError="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="[in_Config(&quot;MasterLogUpdatedMailBody&quot;).ToString.Replace(&quot;name&quot;,System.Environment.UserName)]" DisplayName="System exception mail" sap:VirtualizedContainerService.HintSize="338,146" sap2010:WorkflowViewState.IdRef="SendOutlookMail_3" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" SentOnBehalfOfName="[in_Config(&quot;SentOnBehalf&quot;).ToString]" Subject="[in_Config(&quot;MasterLogUpdatedMailSubject&quot;).ToString]" To="[in_Config(&quot;NotificationEmailID&quot;).ToString]">
                    <ui:SendOutlookMail.Files>
                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                        <InArgument x:TypeArguments="x:String" />
                      </scg:List>
                    </ui:SendOutlookMail.Files>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:SendOutlookMail>
                  <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="338,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" MethodName="Collect" TargetType="s:GC">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </InvokeMethod>
                  <Throw Exception="[new BusinessRuleException(&quot;Master Log file already updated&quot;)]" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="Throw_3" />
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap:VirtualizedContainerService.HintSize="376,1048" sap2010:WorkflowViewState.IdRef="Sequence_14">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="[UiPath.Core.Activities.LogLevel.Warn]" Message="[&quot;Master Log not found&quot;]" />
            <ui:CopyFile ContinueOnError="{x:Null}" Destination="[in_Config(&quot;MasterLogFilePath&quot;).ToString.Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;))]" DisplayName="Create Master Log" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="CopyFile_4" Overwrite="True" Path="[in_LocalTemplateFolderPath + &quot;\&quot; + Path.GetFileName(in_Config(&quot;MasterLogTemplatePath&quot;).ToString)]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:CopyFile>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;Master Log created&quot;]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:LogMessage>
            <ueab:ExcelProcessScopeX ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" DisplayAlerts="False" DisplayName="Scope - Master Log" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1" MacroSettings="EnableAll" ProcessMode="AlwaysCreateNew" ShowExcelWindow="False">
              <ueab:ExcelProcessScopeX.Body>
                <ActivityAction x:TypeArguments="ui:IExcelProcess">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                  </ActivityAction.Argument>
                  <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" SensitivityLabel="{x:Null}" CreateNewFile="False" DisplayName="Use - Master Log" sap:VirtualizedContainerService.HintSize="434,90" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" SensitivityOperation="None" WorkbookPath="[in_Config(&quot;MasterLogFilePath&quot;).ToString.Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;))]">
                    <ueab:ExcelApplicationCard.Body>
                      <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                        </ActivityAction.Argument>
                        <ueab:RenameSheetX DisplayName="Rename Sheet" From="[Excel.Sheet(&quot;MMMM yyyy&quot;)]" sap:VirtualizedContainerService.HintSize="434,147" sap2010:WorkflowViewState.IdRef="RenameSheetX_1" To="[Today.ToString(&quot;MMMM yyyy&quot;)]" />
                      </ActivityAction>
                    </ueab:ExcelApplicationCard.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ueab:ExcelApplicationCard>
                </ActivityAction>
              </ueab:ExcelProcessScopeX.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ueab:ExcelProcessScopeX>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Template sheet renamed&quot;]" />
            <ui:CopyFile ContinueOnError="{x:Null}" Destination="[in_LocalInputFolderPath + &quot;\&quot; + Path.GetFileName(in_Config(&quot;MasterLogFilePath&quot;).ToString.Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;)))]" DisplayName="Copy Master Log" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="CopyFile_5" Overwrite="True" Path="[in_Config(&quot;MasterLogFilePath&quot;).ToString.Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;))]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:CopyFile>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="[&quot;Master Log copied to local inputs folder&quot;]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:LogMessage>
          </Sequence>
        </If.Else>
      </If>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="410,141" sap2010:WorkflowViewState.IdRef="LogMessage_35" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Check and create Broker Master log: Completed&quot;]" />
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Apply filter on multiple columns and get required data.&#xA;Add missing columns." DisplayName="Format data" sap:VirtualizedContainerService.HintSize="496,123" sap2010:WorkflowViewState.IdRef="Sequence_20">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Format data: Started&quot;]" />
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_36" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;List unwanted columns: Started&quot;]" />
      <ui:BuildDataTable DataTable="[dt_UnwantedCols]" DisplayName="Build - Unwanted Col DT" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Name&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:BuildDataTable>
      <Assign DisplayName="Initialise counter" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_2">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">[RowCounter]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">-1</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ForEach x:TypeArguments="sd:DataColumn" CurrentIndex="{x:Null}" DisplayName="For Each - Column" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[dt_AgedDebtData.Columns]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="sd:DataColumn">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataColumn" Name="col" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="552,945" sap2010:WorkflowViewState.IdRef="Sequence_17">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:FilterDataTable DataTable="[in_dt_BnkStmtReqCols]" DisplayName="Filter - Req cols" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="510,161" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[dt_Temp]" SelectColumnsMode="Keep">
                <ui:FilterDataTable.Filters>
                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                    <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                      <ui:FilterOperationArgument.Column>
                        <InArgument x:TypeArguments="x:String">["Name"]</InArgument>
                      </ui:FilterOperationArgument.Column>
                      <ui:FilterOperationArgument.Operand>
                        <InArgument x:TypeArguments="x:String">[col.ColumnName]</InArgument>
                      </ui:FilterOperationArgument.Operand>
                    </ui:FilterOperationArgument>
                  </scg:List>
                </ui:FilterDataTable.Filters>
                <ui:FilterDataTable.SelectColumns>
                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                    <x:Null />
                  </scg:List>
                </ui:FilterDataTable.SelectColumns>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:FilterDataTable>
              <If Condition="[dt_Temp.RowCount &gt; 0]" DisplayName="If - Required column" sap:VirtualizedContainerService.HintSize="510,656" sap2010:WorkflowViewState.IdRef="If_7">
                <If.Then>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[col.ColumnName + &quot; - Required column&quot;]" />
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="476,384" sap2010:WorkflowViewState.IdRef="Sequence_16">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[new String(){}]" DataTable="[dt_UnwantedCols]" DisplayName="Add blank row" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="AddDataRow_1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:AddDataRow>
                    <Assign DisplayName="Increment counter" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_3">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[RowCounter]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">[RowCounter + 1]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Assign - Col name" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_4">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[dt_UnwantedCols.Rows(RowCounter).Item("Name")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[col.ColumnName]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEach>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_37" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;List unwanted columns: Completed&quot;]" />
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_38" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Remove unwanted columns: Started&quot;]" />
      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_UnwantedCols]" DisplayName="For Each Row - Remove unwanted columns" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
            </ActivityAction.Argument>
            <ui:RemoveDataColumn Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="[row(&quot;Name&quot;).ToString]" DataTable="[dt_AgedDebtData]" DisplayName="Remove Unwanted Column" sap:VirtualizedContainerService.HintSize="334,186" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:RemoveDataColumn>
          </ActivityAction>
        </ui:ForEachRow.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEachRow>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_39" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Remove unwanted columns: Completed&quot;]" />
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_40" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Add missing columns: Started&quot;]" />
      <Assign sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_5">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">[ColIndex]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">-1</InArgument>
        </Assign.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Assign>
      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[in_dt_BnkStmtReqCols]" DisplayName="Add missing columns" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="476,1289" sap2010:WorkflowViewState.IdRef="Sequence_19">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_6">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[ColIndex]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[ColIndex + 1]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[dt_AgedDebtData.Columns.Contains(row(&quot;Name&quot;).ToString)]" DisplayName="If - Col exists" sap:VirtualizedContainerService.HintSize="434,1079" sap2010:WorkflowViewState.IdRef="If_8">
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="300,358" sap2010:WorkflowViewState.IdRef="Sequence_42">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <InvokeMethod sap2010:Annotation.AnnotationText="Moves column to the desired position" DisplayName="Adjust column position" sap:VirtualizedContainerService.HintSize="258,178" sap2010:WorkflowViewState.IdRef="InvokeMethod_9" MethodName="SetOrdinal">
                      <InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="sd:DataColumn">[dt_AgedDebtData.Columns(row("Name").ToString)]</InArgument>
                      </InvokeMethod.TargetObject>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <InArgument x:TypeArguments="x:Int32">[ColIndex]</InArgument>
                    </InvokeMethod>
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="Col already exists">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </WriteLine>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="376,539" sap2010:WorkflowViewState.IdRef="Sequence_18">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:AddDataColumn x:TypeArguments="x:String" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="[row(&quot;Name&quot;).ToString]" DataTable="[dt_AgedDebtData]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:AddDataColumn>
                    <InvokeMethod sap2010:Annotation.AnnotationText="Moves column to the desired position" DisplayName="Adjust column position" sap:VirtualizedContainerService.HintSize="334,178" sap2010:WorkflowViewState.IdRef="InvokeMethod_4" MethodName="SetOrdinal">
                      <InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="sd:DataColumn">[dt_AgedDebtData.Columns(row("Name").ToString)]</InArgument>
                      </InvokeMethod.TargetObject>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <InArgument x:TypeArguments="x:Int32">[ColIndex]</InArgument>
                    </InvokeMethod>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[row(&quot;Name&quot;).ToString + &quot; - column added&quot;]" />
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEachRow.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEachRow>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_41" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Add missing columns: Completed&quot;]" />
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Format data: Completed&quot;]" />
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Bot will look into Broker details file for Broker code, Credit controller etc., details and update the Broker statements datatable" DisplayName="Update Broker details" sap:VirtualizedContainerService.HintSize="496,123" sap2010:WorkflowViewState.IdRef="Sequence_24">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_42" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Update broker details: Started&quot;]" />
      <ui:FileExistsX DisplayName="Check for Broker details file" Exists="[FileExists]" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="FileExistsX_3" Path="[in_Config(&quot;BrokerDetailsFilePath&quot;).ToString]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:FileExistsX>
      <If Condition="[FileExists]" DisplayName="If - Exists" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="If_9">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="376,502" sap2010:WorkflowViewState.IdRef="Sequence_21">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_44" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Broker details file found&quot;]" />
            <ui:CopyFile ContinueOnError="{x:Null}" Destination="[in_LocalInputFolderPath + &quot;\&quot; + Path.GetFileName(in_Config(&quot;BrokerDetailsFilePath&quot;).ToString)]" DisplayName="Copy Broker Details File" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="CopyFile_6" Overwrite="True" Path="[in_Config(&quot;BrokerDetailsFilePath&quot;).ToString]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:CopyFile>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Info" Message="[&quot;Broker Details file copied to local inputs folder&quot;]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:LogMessage>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap:VirtualizedContainerService.HintSize="376,721" sap2010:WorkflowViewState.IdRef="Sequence_22">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_45" Level="[UiPath.Core.Activities.LogLevel.Warn]" Message="[&quot;Broker details file not found&quot;]" />
            <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" ContinueOnError="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="[in_Config(&quot;ReportExceptionMailBody&quot;).ToString.Replace(&quot;name&quot;,System.Environment.UserName).Replace(&quot;fileName&quot;,&quot;Broker Details&quot;)]" DisplayName="System exception mail" sap:VirtualizedContainerService.HintSize="334,146" sap2010:WorkflowViewState.IdRef="SendOutlookMail_4" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" SentOnBehalfOfName="[in_Config(&quot;SentOnBehalf&quot;).ToString]" Subject="[in_Config(&quot;ReportExceptionMailSubject&quot;).ToString]" To="[in_Config(&quot;NotificationEmailID&quot;).ToString]">
              <ui:SendOutlookMail.Files>
                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                  <InArgument x:TypeArguments="x:String" />
                </scg:List>
              </ui:SendOutlookMail.Files>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:SendOutlookMail>
            <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="334,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_5" MethodName="Collect" TargetType="s:GC">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </InvokeMethod>
            <Throw Exception="[new BusinessRuleException(&quot;Broker Details file not found in specified shared drive location&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_4" />
          </Sequence>
        </If.Else>
      </If>
      <ueab:ExcelProcessScopeX ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" DisplayAlerts="False" DisplayName="Scope - Broker Details file" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_2" MacroSettings="EnableAll" ProcessMode="AlwaysCreateNew" ShowExcelWindow="False">
        <ueab:ExcelProcessScopeX.Body>
          <ActivityAction x:TypeArguments="ui:IExcelProcess">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
            </ActivityAction.Argument>
            <ueab:ExcelApplicationCard Password="{x:Null}" SensitivityLabel="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Use - Broker Details file" sap:VirtualizedContainerService.HintSize="434,321" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_2" ReadFormatting="DisplayValue" ResizeWindow="None" SensitivityOperation="None" WorkbookPath="[in_LocalInputFolderPath + &quot;\&quot; + Path.GetFileName(in_Config(&quot;BrokerDetailsFilePath&quot;).ToString)]">
              <ueab:ExcelApplicationCard.Body>
                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                  </ActivityAction.Argument>
                  <ueab:ReadRangeX DisplayName="Read - Broker Details" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="ReadRangeX_1" Range="[Excel.Sheet(in_Config(&quot;BrokerDetailsTabName&quot;).ToString).Range(&quot;A1&quot;)]" SaveTo="[dt_BrokerDetails]" VisibleOnly="False">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ueab:ReadRangeX>
                </ActivityAction>
              </ueab:ExcelApplicationCard.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ueab:ExcelApplicationCard>
          </ActivityAction>
        </ueab:ExcelProcessScopeX.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ueab:ExcelProcessScopeX>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_46" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Fetch credit controller: Started&quot;]" />
      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_AgedDebtData]" DisplayName="For Each Row - Aged Debt data DT" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="544,988" sap2010:WorkflowViewState.IdRef="Sequence_23">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:FilterDataTable DataTable="[dt_BrokerDetails]" DisplayName="Filter - Broker" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="502,161" sap2010:WorkflowViewState.IdRef="FilterDataTable_2" OutputDataTable="[dt_Temp]" SelectColumnsMode="Keep">
                <ui:FilterDataTable.Filters>
                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                    <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                      <ui:FilterOperationArgument.Column>
                        <InArgument x:TypeArguments="x:String">[in_Config("BDBrokerColName").ToString]</InArgument>
                      </ui:FilterOperationArgument.Column>
                      <ui:FilterOperationArgument.Operand>
                        <InArgument x:TypeArguments="x:String">[row(in_Config("BSBrokerColName").ToString).ToString]</InArgument>
                      </ui:FilterOperationArgument.Operand>
                    </ui:FilterOperationArgument>
                  </scg:List>
                </ui:FilterDataTable.Filters>
                <ui:FilterDataTable.SelectColumns>
                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                    <x:Null />
                  </scg:List>
                </ui:FilterDataTable.SelectColumns>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:FilterDataTable>
              <If Condition="[dt_Temp.RowCount &gt; 0]" DisplayName="If - Broker exists" sap:VirtualizedContainerService.HintSize="502,52" sap2010:WorkflowViewState.IdRef="If_10">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="476,169" sap2010:WorkflowViewState.IdRef="Sequence_50">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - Credit Controller" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_20">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[row(in_Config("BSCreditCtrlColName").ToString)]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[dt_Temp.Rows(0).Item(in_Config("BDCreditCtrlColName").ToString).ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="[row(in_Config(&quot;BSBrokerColName&quot;).ToString).ToString + &quot; - broker not found in Broker Details file&quot;]" />
                </If.Else>
              </If>
              <If Condition="[row(in_Config(&quot;ADBkrCodeLysColName&quot;).ToString).ToString.Trim.Length=3]" DisplayName="If - Broker code length is 3" sap:VirtualizedContainerService.HintSize="502,607" sap2010:WorkflowViewState.IdRef="If_12">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Assign DisplayName="Assign - Broker No" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_8">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[row(in_Config("BSBrokerNoColName").ToString)]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">["B0" + row(in_Config("ADBkrCodeLysColName").ToString).ToString.Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
                <If.Else>
                  <If Condition="[row(in_Config(&quot;ADBkrCodeLysColName&quot;).ToString).ToString.Trim.Length=4]" DisplayName="If - Broker code length is 4" sap:VirtualizedContainerService.HintSize="468,344" sap2010:WorkflowViewState.IdRef="If_11">
                    <If.Then>
                      <Assign DisplayName="Assign - Broker No" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_9">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[row(in_Config("BSBrokerNoColName").ToString)]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Object">["B" + row(in_Config("ADBkrCodeLysColName").ToString).ToString.Trim]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                    <If.Else>
                      <Assign DisplayName="Assign - Broker No" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_10">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[row(in_Config("BSBrokerNoColName").ToString)]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Object">[row(in_Config("ADBkrCodeLysColName").ToString).ToString.Trim]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Else>
                  </If>
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEachRow.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEachRow>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_47" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Fetch credit controller: Completed&quot;]" />
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_43" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Update broker details: Completed&quot;]" />
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Bot will create separate folders for every Broker to save the statements" DisplayName="Create Broker Statements folder" sap:VirtualizedContainerService.HintSize="496,112" sap2010:WorkflowViewState.IdRef="Sequence_27">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_48" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Create broker statements folder: Started&quot;]" />
      <Assign DisplayName="Assign - Filter unique credit controllers" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_11">
        <Assign.To>
          <OutArgument x:TypeArguments="sd:DataTable">[dt_Temp]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="sd:DataTable">[dt_AgedDebtData.DefaultView.ToTable(True, in_Config("BSCreditCtrlColName").ToString)]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_Temp]" DisplayName="For Each Row  - Create folders" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="ForEachRow_4">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="300,232" sap2010:WorkflowViewState.IdRef="Sequence_26">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:FolderExistsX DisplayName="Check for Broker folder" Exists="[FileExists]" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="FolderExistsX_3" Path="[in_Config(&quot;BrokerStatementsFolderPath&quot;).ToString.Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;)).Replace(&quot;MMMM&quot;,Today.ToString(&quot;MMMM&quot;)).Replace(&quot;MC&quot;,Today.Month.ToString) + &quot;\&quot; + row(in_Config(&quot;BSCreditCtrlColName&quot;).ToString).ToString]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:FolderExistsX>
              <If Condition="[FileExists]" DisplayName="If - Exists" sap:VirtualizedContainerService.HintSize="410,672" sap2010:WorkflowViewState.IdRef="If_13">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Info" Message="[row(in_Config(&quot;BSCreditCtrlColName&quot;).ToString).ToString + &quot; - broker folder already present&quot;]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="376,349" sap2010:WorkflowViewState.IdRef="Sequence_25">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Broker Folder" sap:VirtualizedContainerService.HintSize="334,80" sap2010:WorkflowViewState.IdRef="CreateDirectory_3" Path="[in_Config(&quot;BrokerStatementsFolderPath&quot;).ToString.Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;)).Replace(&quot;MMMM&quot;,Today.ToString(&quot;MMMM&quot;)).Replace(&quot;MC&quot;,Today.Month.ToString) + &quot;\&quot; + row(in_Config(&quot;BSCreditCtrlColName&quot;).ToString).ToString]" />
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_19" Level="Info" Message="[row(in_Config(&quot;BSCreditCtrlColName&quot;).ToString).ToString + &quot; - broker folder created&quot;]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:LogMessage>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEachRow.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEachRow>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_49" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Create broker statements folder: Completed&quot;]" />
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Bot will create separate folders for every Broker to save the responses" DisplayName="Create Broker Response folders" sap:VirtualizedContainerService.HintSize="496,112" sap2010:WorkflowViewState.IdRef="Sequence_45">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_67" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Create broker response folder: Started&quot;]" />
      <Assign DisplayName="Assign - Filter unique credit controllers" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_19">
        <Assign.To>
          <OutArgument x:TypeArguments="sd:DataTable">[dt_Temp]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="sd:DataTable">[dt_AgedDebtData.DefaultView.ToTable(True, in_Config("BSCreditCtrlColName").ToString)]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_Temp]" DisplayName="For Each Row  - Create folders" sap:VirtualizedContainerService.HintSize="334,786" sap2010:WorkflowViewState.IdRef="ForEachRow_7">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="300,600" sap2010:WorkflowViewState.IdRef="Sequence_44">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:FolderExistsX DisplayName="Check for Broker folder" Exists="[FileExists]" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="FolderExistsX_4" Path="[in_Config(&quot;BrokerResponseFolderPath&quot;).ToString.Replace(&quot;&lt;-CC-&gt;&quot;,row(in_Config(&quot;BSCreditCtrlColName&quot;).ToString).ToString).Replace(&quot;\yyyy&quot;,&quot;&quot;).Replace(&quot;\MMMM&quot;,&quot;&quot;)]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:FolderExistsX>
              <If Condition="[FileExists]" DisplayName="If - Exists" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="If_19">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_69" Level="Info" Message="[row(in_Config(&quot;BSCreditCtrlColName&quot;).ToString).ToString + &quot; - broker folder already present&quot;]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="376,349" sap2010:WorkflowViewState.IdRef="Sequence_43">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Broker Folder" sap:VirtualizedContainerService.HintSize="334,80" sap2010:WorkflowViewState.IdRef="CreateDirectory_4" Path="[in_Config(&quot;BrokerResponseFolderPath&quot;).ToString.Replace(&quot;&lt;-CC-&gt;&quot;,row(in_Config(&quot;BSCreditCtrlColName&quot;).ToString).ToString).Replace(&quot;\yyyy&quot;,&quot;&quot;).Replace(&quot;\MMMM&quot;,&quot;&quot;)]" />
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_70" Level="Info" Message="[row(in_Config(&quot;BSCreditCtrlColName&quot;).ToString).ToString + &quot; - broker folder created&quot;]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:LogMessage>
                  </Sequence>
                </If.Else>
              </If>
              <ui:FolderExistsX DisplayName="Check for Year folder" Exists="[FileExists]" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="FolderExistsX_5" Path="[in_Config(&quot;BrokerResponseFolderPath&quot;).ToString.Replace(&quot;&lt;-CC-&gt;&quot;,row(in_Config(&quot;BSCreditCtrlColName&quot;).ToString).ToString).Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;)).Replace(&quot;\MMMM&quot;,&quot;&quot;)]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:FolderExistsX>
              <If Condition="[FileExists]" DisplayName="If - Exists" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="If_20">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_71" Level="Info" Message="[&quot;Year folder already present&quot;]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="376,349" sap2010:WorkflowViewState.IdRef="Sequence_46">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Broker Folder" sap:VirtualizedContainerService.HintSize="334,80" sap2010:WorkflowViewState.IdRef="CreateDirectory_5" Path="[in_Config(&quot;BrokerResponseFolderPath&quot;).ToString.Replace(&quot;&lt;-CC-&gt;&quot;,row(in_Config(&quot;BSCreditCtrlColName&quot;).ToString).ToString).Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;)).Replace(&quot;\MMMM&quot;,&quot;&quot;)]" />
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_72" Level="Info" Message="[&quot;Year folder created&quot;]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:LogMessage>
                  </Sequence>
                </If.Else>
              </If>
              <ui:FolderExistsX DisplayName="Check for Month folder" Exists="[FileExists]" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="FolderExistsX_6" Path="[in_Config(&quot;BrokerResponseFolderPath&quot;).ToString.Replace(&quot;&lt;-CC-&gt;&quot;,row(in_Config(&quot;BSCreditCtrlColName&quot;).ToString).ToString).Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;)).Replace(&quot;MMMM&quot;,Today.ToString(&quot;MMMM&quot;))]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:FolderExistsX>
              <If Condition="[FileExists]" DisplayName="If - Exists" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="If_21">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_73" Level="Info" Message="[&quot;Month folder already present&quot;]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="376,349" sap2010:WorkflowViewState.IdRef="Sequence_47">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Broker Folder" sap:VirtualizedContainerService.HintSize="334,80" sap2010:WorkflowViewState.IdRef="CreateDirectory_6" Path="[in_Config(&quot;BrokerResponseFolderPath&quot;).ToString.Replace(&quot;&lt;-CC-&gt;&quot;,row(in_Config(&quot;BSCreditCtrlColName&quot;).ToString).ToString).Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;)).Replace(&quot;MMMM&quot;,Today.ToString(&quot;MMMM&quot;))]" />
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_74" Level="Info" Message="[&quot;Month folder created&quot;]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:LogMessage>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEachRow.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEachRow>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_68" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Create broker response folder: Completed&quot;]" />
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Bot will create and save the broker statements at respective folder&#xA;Bot will also update the Master Log with all the necessary details" DisplayName="Save Broker statements and Update Master Log" sap:VirtualizedContainerService.HintSize="496,123" sap2010:WorkflowViewState.IdRef="Sequence_32">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="631,141" sap2010:WorkflowViewState.IdRef="LogMessage_50" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Save broker statements and update master log: Started&quot;]" />
      <Assign DisplayName="Assign - Filter unique credit controllers" sap:VirtualizedContainerService.HintSize="631,82" sap2010:WorkflowViewState.IdRef="Assign_12">
        <Assign.To>
          <OutArgument x:TypeArguments="sd:DataTable">[dt_Temp]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="sd:DataTable">[dt_AgedDebtData.DefaultView.ToTable(True,in_Config("BSBrokerColName").ToString,in_Config("BSCreditCtrlColName").ToString,in_Config("BSBrokerNoColName").ToString)]</InArgument>
        </Assign.Value>
      </Assign>
      <ueab:ExcelProcessScopeX ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" DisplayAlerts="False" DisplayName="Scope - Master Log" sap:VirtualizedContainerService.HintSize="631,525" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_3" MacroSettings="EnableAll" ProcessMode="AlwaysCreateNew" ShowExcelWindow="False">
        <ueab:ExcelProcessScopeX.Body>
          <ActivityAction x:TypeArguments="ui:IExcelProcess">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
            </ActivityAction.Argument>
            <ueab:ExcelApplicationCard Password="{x:Null}" SensitivityLabel="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Use - Master log" sap:VirtualizedContainerService.HintSize="478,438" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_3" ReadFormatting="DisplayValue" ResizeWindow="None" SensitivityOperation="None" WorkbookPath="[in_LocalInputFolderPath + &quot;\&quot; + Path.GetFileName(in_Config(&quot;MasterLogFilePath&quot;).ToString.Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;)))]">
              <ueab:ExcelApplicationCard.Body>
                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                  </ActivityAction.Argument>
                  <ueab:ReadRangeX DisplayName="Read Headers" sap:VirtualizedContainerService.HintSize="444,169" sap2010:WorkflowViewState.IdRef="ReadRangeX_2" Range="[Excel.Sheet(Today.ToString(&quot;MMMM yyyy&quot;)).Range(&quot;A1&quot;)]" ReadFormatting="DisplayValue" SaveTo="[dt_MasterLogData]" VisibleOnly="False" />
                </ActivityAction>
              </ueab:ExcelApplicationCard.Body>
            </ueab:ExcelApplicationCard>
          </ActivityAction>
        </ueab:ExcelProcessScopeX.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ueab:ExcelProcessScopeX>
      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_Temp]" DisplayName="For Each Row - Create reports and save" sap:VirtualizedContainerService.HintSize="631,3374" sap2010:WorkflowViewState.IdRef="ForEachRow_5">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="597,3188" sap2010:WorkflowViewState.IdRef="Sequence_31">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Clear data" sap:VirtualizedContainerService.HintSize="555,82" sap2010:WorkflowViewState.IdRef="Assign_13">
                <Assign.To>
                  <OutArgument x:TypeArguments="sd:DataTable">[dt_MasterLogData]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="sd:DataTable">[dt_MasterLogData.Clone()]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[new String(){}]" DataTable="[dt_MasterLogData]" DisplayName="Add Empty Row" sap:VirtualizedContainerService.HintSize="555,52" sap2010:WorkflowViewState.IdRef="AddDataRow_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:AddDataRow>
              <ui:FilterDataTable DataTable="[dt_AgedDebtData]" DisplayName="Filter - Specific broker data" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="555,161" sap2010:WorkflowViewState.IdRef="FilterDataTable_3" OutputDataTable="[dt_FilteredData]" SelectColumnsMode="Keep">
                <ui:FilterDataTable.Filters>
                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                    <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                      <ui:FilterOperationArgument.Column>
                        <InArgument x:TypeArguments="x:String">[in_Config("BSBrokerColName").ToString]</InArgument>
                      </ui:FilterOperationArgument.Column>
                      <ui:FilterOperationArgument.Operand>
                        <InArgument x:TypeArguments="x:String">[row(in_Config("BSBrokerColName").ToString).ToString]</InArgument>
                      </ui:FilterOperationArgument.Operand>
                    </ui:FilterOperationArgument>
                    <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                      <ui:FilterOperationArgument.Column>
                        <InArgument x:TypeArguments="x:String">[in_Config("BSBrokerNoColName").ToString]</InArgument>
                      </ui:FilterOperationArgument.Column>
                      <ui:FilterOperationArgument.Operand>
                        <InArgument x:TypeArguments="x:String">[row(in_Config("BSBrokerNoColName").ToString).ToString]</InArgument>
                      </ui:FilterOperationArgument.Operand>
                    </ui:FilterOperationArgument>
                  </scg:List>
                </ui:FilterDataTable.Filters>
                <ui:FilterDataTable.SelectColumns>
                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                    <x:Null />
                  </scg:List>
                </ui:FilterDataTable.SelectColumns>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:FilterDataTable>
              <If Condition="[dt_FilteredData.RowCount &gt; 0]" DisplayName="If - Data exist" sap:VirtualizedContainerService.HintSize="555,1993" sap2010:WorkflowViewState.IdRef="If_15">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="521,1670" sap2010:WorkflowViewState.IdRef="Sequence_30">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:SortDataTable ColumnIndex="{x:Null}" DataColumn="{x:Null}" ColumnName="[in_Config(&quot;GnEpiColName&quot;).ToString]" DataTable="[dt_FilteredData]" DisplayName="Sort - Amount" sap:VirtualizedContainerService.HintSize="479,52" sap2010:WorkflowViewState.IdRef="SortDataTable_2" Order="Decending" OutputDataTable="[dt_FilteredData]" SortOrder="Descending">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:SortDataTable>
                    <ui:MultipleAssign DisplayName="Assign - Master Log details" sap:VirtualizedContainerService.HintSize="479,302" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                      <ui:MultipleAssign.AssignOperations>
                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:Object">[dt_MasterLogData.Rows(0).Item(in_Config("MLBrokerColName").ToString)]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:Object">[row(in_Config("BSBrokerColName").ToString).ToString]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap:VirtualizedContainerService.HintSize="334,32" sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:Object">[dt_MasterLogData.Rows(0).Item(in_Config("MLTotalValSColName").ToString)]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:Object">[dt_FilteredData.AsEnumerable.Sum(Function(a)Convert.ToDouble(a(in_Config("GnEpiColName").ToString).ToString)).ToString]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:Object">[dt_MasterLogData.Rows(0).Item(in_Config("MLNumRiskSColName").ToString)]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:Object">[dt_FilteredData.RowCount.ToString]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:Object">[dt_MasterLogData.Rows(0).Item(in_Config("MLStmtSentColName").ToString)]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:Object">[Today.ToString("dd/MM/yyyy")]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:Object">[dt_MasterLogData.Rows(0).Item(in_Config("MLAcntHndlrColName").ToString)]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:Object">[row(in_Config("BSCreditCtrlColName").ToString).ToString]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:Object">[dt_MasterLogData.Rows(0).Item(in_Config("MLBkrCodeLysColName").ToString)]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:Object">[dt_FilteredData.Rows(0).Item(in_Config("BSBrokerNoColName").ToString).ToString]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:Object">[dt_MasterLogData.Rows(0).Item(in_Config("MLBkrCodeSrcColName").ToString)]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:Object">[dt_FilteredData.Rows(0).Item(in_Config("ADBkrCodeSrcColName").ToString).ToString]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                        </scg:List>
                      </ui:MultipleAssign.AssignOperations>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:MultipleAssign>
                    <ui:RemoveDataColumn Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="[in_Config(&quot;ADBkrCodeLysColName&quot;).ToString]" DataTable="[dt_FilteredData]" DisplayName="Remove Column - Broker Code Lloyds" sap:VirtualizedContainerService.HintSize="479,52" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:RemoveDataColumn>
                    <ui:RemoveDataColumn Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="[in_Config(&quot;ADBkrCodeSrcColName&quot;).ToString]" DataTable="[dt_FilteredData]" DisplayName="Remove Column - Broker Code Source" sap:VirtualizedContainerService.HintSize="479,52" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:RemoveDataColumn>
                    <ui:RemoveDataColumn Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="[in_Config(&quot;BSCreditCtrlColName&quot;).ToString]" DataTable="[dt_FilteredData]" DisplayName="Remove Column - Credit Controller" sap:VirtualizedContainerService.HintSize="479,52" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_6">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:RemoveDataColumn>
                    <If sap2010:Annotation.AnnotationText="If multiple broker codes for same broker then file name should contain broker code" Condition="[(from dr in dt_Temp where dr(in_Config(&quot;BSBrokerColName&quot;).ToString).ToString.Equals(row(in_Config(&quot;BSBrokerColName&quot;).ToString).ToString) select dr).Count &gt; 1]" DisplayName="If - Multiple Broker Codes" sap:VirtualizedContainerService.HintSize="479,872" sap2010:WorkflowViewState.IdRef="If_14">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="300,324" sap2010:WorkflowViewState.IdRef="Sequence_62">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ueab:ExcelProcessScopeX ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" DisplayAlerts="False" DisplayName="Scope - Broker Statement" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_10" MacroSettings="EnableAll" ProcessMode="AlwaysCreateNew" ShowExcelWindow="False">
                            <ueab:ExcelProcessScopeX.Body>
                              <ActivityAction x:TypeArguments="ui:IExcelProcess">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                                </ActivityAction.Argument>
                                <ueab:ExcelApplicationCard Password="{x:Null}" SensitivityLabel="{x:Null}" DisplayName="Use - Broker Statement" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_10" ReadFormatting="DisplayValue" ResizeWindow="None" SensitivityOperation="None" WorkbookPath="[in_Config(&quot;BrokerStatementsFolderPath&quot;).ToString.Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;)).Replace(&quot;MMMM&quot;,Today.ToString(&quot;MMMM&quot;)).Replace(&quot;MC&quot;,Today.Month.ToString) + &quot;\&quot; + row(in_Config(&quot;BSCreditCtrlColName&quot;).ToString).ToString + &quot;\&quot; + in_Config(&quot;BkrStmtFileName&quot;).ToString.Replace(&quot;Bkr&quot;,row(in_Config(&quot;BSBrokerColName&quot;).ToString).ToString.Replace(&quot;\&quot;,&quot;&quot;).Replace(&quot;/&quot;,&quot;&quot;).Replace(&quot;:&quot;,&quot;&quot;).Replace(&quot;*&quot;,&quot;&quot;).Replace(&quot;?&quot;,&quot;&quot;).Replace(Chr(34),&quot;&quot;).Replace(&quot;&lt;&quot;,&quot;&quot;).Replace(&quot;&gt;&quot;,&quot;&quot;).Replace(&quot;|&quot;,&quot;&quot;)).Replace(&quot;MMMM&quot;,Today.ToString(&quot;MMMM&quot;)).Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;)).Replace(&quot;BC&quot;,row(in_Config(&quot;BSBrokerNoColName&quot;).ToString).ToString)]">
                                  <ueab:ExcelApplicationCard.Body>
                                    <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                                      </ActivityAction.Argument>
                                      <Sequence sap:VirtualizedContainerService.HintSize="450,623" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(in_Config(&quot;BSBkrCelRef&quot;).ToString)]" DisplayName="Write - Broker Name" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="WriteCellX_6" Value="[row(in_Config(&quot;BSBrokerColName&quot;).ToString).ToString]">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ueab:WriteCellX>
                                        <ueab:FormatRangeX DisplayName="Format - Broker name" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="FormatRangeX_7" Range="[Excel.Sheet(&quot;Sheet1&quot;).Range(in_Config(&quot;BSBkrCelRef&quot;).ToString)]">
                                          <ueab:FormatRangeX.Alignment>
                                            <ui:AlignmentOptions HorizontalAlignment="xlHAlignGeneral" VerticalAlignment="xlVAlignBottom" WrapText="False" />
                                          </ueab:FormatRangeX.Alignment>
                                          <ueab:FormatRangeX.Font>
                                            <ui:FontOptions Color="Black" FillColor="Transparent" FontFamilyName="Calibri" Size="14" Style="Bold" UnderlineStyle="None" />
                                          </ueab:FormatRangeX.Font>
                                          <ueab:FormatRangeX.Format>
                                            <ueab:GeneralFormat />
                                          </ueab:FormatRangeX.Format>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ueab:FormatRangeX>
                                        <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(in_Config(&quot;BSStmtCelRef&quot;).ToString)]" DisplayName="Write - Stmt of account" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="WriteCellX_7" Value="[in_Config(&quot;BSStmtCelVal&quot;).ToString.Replace(&quot;dd.MM.yyyy&quot;,Today.ToString(&quot;dd.MM.yyyy&quot;))]">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ueab:WriteCellX>
                                        <ueab:FormatRangeX DisplayName="Format - Stmt of account" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="FormatRangeX_8" Range="[Excel.Sheet(&quot;Sheet1&quot;).Range(in_Config(&quot;BSStmtCelRef&quot;).ToString)]">
                                          <ueab:FormatRangeX.Alignment>
                                            <ui:AlignmentOptions HorizontalAlignment="xlHAlignGeneral" VerticalAlignment="xlVAlignBottom" WrapText="False" />
                                          </ueab:FormatRangeX.Alignment>
                                          <ueab:FormatRangeX.Font>
                                            <ui:FontOptions Color="Black" FillColor="Transparent" FontFamilyName="Calibri" Size="14" Style="Bold" UnderlineStyle="None" />
                                          </ueab:FormatRangeX.Font>
                                          <ueab:FormatRangeX.Format>
                                            <ueab:GeneralFormat />
                                          </ueab:FormatRangeX.Format>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ueab:FormatRangeX>
                                        <ueab:WriteRangeX Destination="[Excel.Sheet(&quot;Sheet1&quot;).Range(in_Config(&quot;BSDataCelRef&quot;).ToString)]" DisplayName="Write - Filtered data" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="WriteRangeX_4" IgnoreEmptySource="True" Source="[dt_FilteredData]">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ueab:WriteRangeX>
                                        <ueab:FormatRangeX DisplayName="Format - Headers" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="FormatRangeX_9" Range="[Excel.Sheet(&quot;Sheet1&quot;).Range(in_Config(&quot;BSDataCelRef&quot;).ToString + &quot;:ZZ&quot; + Regex.Replace(in_Config(&quot;BSDataCelRef&quot;).ToString,&quot;[A-z]+&quot;,String.Empty))]">
                                          <ueab:FormatRangeX.Alignment>
                                            <ui:AlignmentOptions HorizontalAlignment="xlHAlignGeneral" VerticalAlignment="xlVAlignBottom" WrapText="False" />
                                          </ueab:FormatRangeX.Alignment>
                                          <ueab:FormatRangeX.Font>
                                            <ui:FontOptions Color="Black" FillColor="Transparent" FontFamilyName="Arial" Size="10" Style="Bold" UnderlineStyle="None" />
                                          </ueab:FormatRangeX.Font>
                                          <ueab:FormatRangeX.Format>
                                            <ueab:GeneralFormat />
                                          </ueab:FormatRangeX.Format>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ueab:FormatRangeX>
                                      </Sequence>
                                    </ActivityAction>
                                  </ueab:ExcelApplicationCard.Body>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ueab:ExcelApplicationCard>
                              </ActivityAction>
                            </ueab:ExcelProcessScopeX.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ueab:ExcelProcessScopeX>
                          <ui:ExcelApplicationScope Password="{x:Null}" SensitivityLabel="{x:Null}" CreateNewFile="False" DisplayName="Format broker statement" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_3" InstanceCachePeriod="3000" SensitivityOperation="None" Visible="False" WorkbookPath="[in_Config(&quot;BrokerStatementsFolderPath&quot;).ToString.Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;)).Replace(&quot;MMMM&quot;,Today.ToString(&quot;MMMM&quot;)).Replace(&quot;MC&quot;,Today.Month.ToString) + &quot;\&quot; + row(in_Config(&quot;BSCreditCtrlColName&quot;).ToString).ToString + &quot;\&quot; + in_Config(&quot;BkrStmtFileName&quot;).ToString.Replace(&quot;Bkr&quot;,row(in_Config(&quot;BSBrokerColName&quot;).ToString).ToString.Replace(&quot;\&quot;,&quot;&quot;).Replace(&quot;/&quot;,&quot;&quot;).Replace(&quot;:&quot;,&quot;&quot;).Replace(&quot;*&quot;,&quot;&quot;).Replace(&quot;?&quot;,&quot;&quot;).Replace(Chr(34),&quot;&quot;).Replace(&quot;&lt;&quot;,&quot;&quot;).Replace(&quot;&gt;&quot;,&quot;&quot;).Replace(&quot;|&quot;,&quot;&quot;)).Replace(&quot;MMMM&quot;,Today.ToString(&quot;MMMM&quot;)).Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;)).Replace(&quot;BC&quot;,row(in_Config(&quot;BSBrokerNoColName&quot;).ToString).ToString)]">
                            <ui:ExcelApplicationScope.Body>
                              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                </ActivityAction.Argument>
                                <Sequence sap:VirtualizedContainerService.HintSize="496,1116" sap2010:WorkflowViewState.IdRef="Sequence_68">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ExcelLookUpRange DisplayName="Lookup - Amount" sap:VirtualizedContainerService.HintSize="434,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_1" Range="A1:ZZ1000" Result="[ReqCellRef]" SheetName="Sheet1" Value="[in_Config(&quot;GnEpiColName&quot;).ToString]" />
                                  <Assign DisplayName="Assign - Remove number" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_28">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[ReqCellRef]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(ReqCellRef,"\d","")]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_90" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Format data: Started&quot;]" />
                                  <ui:CreateFile ContinueOnError="{x:Null}" Output="{x:Null}" Path="{x:Null}" DisplayName="Create File - Format" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="CreateFile_6" Name="[in_LocalInputFolderPath + &quot;\Format.txt&quot;]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:CreateFile>
                                  <ui:WriteTextFile File="{x:Null}" DisplayName="Write Text File - Format" FileName="[in_LocalInputFolderPath + &quot;\Format.txt&quot;]" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="WriteTextFile_4" Text="[&quot;Sub Format()&quot; + System.Environment.NewLine + &quot;Sheets(&quot; + Chr(34) + &quot;Sheet1&quot; + Chr(34) + &quot;).Select&quot; + System.Environment.NewLine + &quot;ActiveWindow.DisplayGridlines = False&quot; + System.Environment.NewLine + &quot;ActiveWindow.Zoom = &quot; + in_Config(&quot;BSZoom&quot;).ToString.Trim + System.Environment.NewLine + &quot;Cells.Select&quot; + System.Environment.NewLine + &quot;Cells.EntireColumn.AutoFit&quot; + System.Environment.NewLine + &quot;Range(&quot; + Chr(34) + reqCellRef + &quot;:&quot; + reqCellRef + Chr(34) + &quot;).Select&quot; + System.Environment.NewLine + &quot;Selection.NumberFormat = &quot; + Chr(34) + in_Config(&quot;BSNumFormat&quot;).ToString.Trim + Chr(34) + System.Environment.NewLine + &quot;End Sub&quot;]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:WriteTextFile>
                                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[in_LocalInputFolderPath + &quot;\Format.txt&quot;]" DisplayName="Invoke VBA - Format" EntryMethodName="Format" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="InvokeVBA_1">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:InvokeVBA>
                                  <ui:DeleteFileX DisplayName="Delete File - Format" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="DeleteFileX_4" Path="[in_LocalInputFolderPath + &quot;\Format.txt&quot;]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:DeleteFileX>
                                  <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="434,25" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_1" />
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_91" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Format data: Completed&quot;]" />
                                </Sequence>
                              </ActivityAction>
                            </ui:ExcelApplicationScope.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ExcelApplicationScope>
                          <bes:InsertImage ExecutionResult="{x:Null}" FilePassword="{x:Null}" ModifyPassword="{x:Null}" ContinueOnError="True" Delay="3" DisplayName="Insert - Talbot logo" FilePath="[in_Config(&quot;BrokerStatementsFolderPath&quot;).ToString.Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;)).Replace(&quot;MMMM&quot;,Today.ToString(&quot;MMMM&quot;)).Replace(&quot;MC&quot;,Today.Month.ToString) + &quot;\&quot; + row(in_Config(&quot;BSCreditCtrlColName&quot;).ToString).ToString + &quot;\&quot; + in_Config(&quot;BkrStmtFileName&quot;).ToString.Replace(&quot;Bkr&quot;,row(in_Config(&quot;BSBrokerColName&quot;).ToString).ToString.Replace(&quot;\&quot;,&quot;&quot;).Replace(&quot;/&quot;,&quot;&quot;).Replace(&quot;:&quot;,&quot;&quot;).Replace(&quot;*&quot;,&quot;&quot;).Replace(&quot;?&quot;,&quot;&quot;).Replace(Chr(34),&quot;&quot;).Replace(&quot;&lt;&quot;,&quot;&quot;).Replace(&quot;&gt;&quot;,&quot;&quot;).Replace(&quot;|&quot;,&quot;&quot;)).Replace(&quot;MMMM&quot;,Today.ToString(&quot;MMMM&quot;)).Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;)).Replace(&quot;BC&quot;,row(in_Config(&quot;BSBrokerNoColName&quot;).ToString).ToString)]" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="InsertImage_1" ImagePath="[in_Config(&quot;ImagePath&quot;).ToString.Trim]" SheetName="Sheet1">
                            <bes:InsertImage.Size>
                              <beu:ObjectSize Height="60" Left="625" Top="5" Width="100" />
                            </bes:InsertImage.Size>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </bes:InsertImage>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="300,324" sap2010:WorkflowViewState.IdRef="Sequence_64">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ueab:ExcelProcessScopeX ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" DisplayAlerts="False" DisplayName="Scope - Broker Statement" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_11" MacroSettings="EnableAll" ProcessMode="AlwaysCreateNew" ShowExcelWindow="False">
                            <ueab:ExcelProcessScopeX.Body>
                              <ActivityAction x:TypeArguments="ui:IExcelProcess">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                                </ActivityAction.Argument>
                                <ueab:ExcelApplicationCard Password="{x:Null}" SensitivityLabel="{x:Null}" DisplayName="Use - Broker Statement" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_11" ReadFormatting="DisplayValue" ResizeWindow="None" SensitivityOperation="None" WorkbookPath="[in_Config(&quot;BrokerStatementsFolderPath&quot;).ToString.Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;)).Replace(&quot;MMMM&quot;,Today.ToString(&quot;MMMM&quot;)).Replace(&quot;MC&quot;,Today.Month.ToString) + &quot;\&quot; + row(in_Config(&quot;BSCreditCtrlColName&quot;).ToString).ToString + &quot;\&quot; + in_Config(&quot;BkrStmtFileName&quot;).ToString.Replace(&quot;Bkr&quot;,row(in_Config(&quot;BSBrokerColName&quot;).ToString).ToString.Replace(&quot;\&quot;,&quot;&quot;).Replace(&quot;/&quot;,&quot;&quot;).Replace(&quot;:&quot;,&quot;&quot;).Replace(&quot;*&quot;,&quot;&quot;).Replace(&quot;?&quot;,&quot;&quot;).Replace(Chr(34),&quot;&quot;).Replace(&quot;&lt;&quot;,&quot;&quot;).Replace(&quot;&gt;&quot;,&quot;&quot;).Replace(&quot;|&quot;,&quot;&quot;)).Replace(&quot;MMMM&quot;,Today.ToString(&quot;MMMM&quot;)).Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;)).Replace(&quot; - BC&quot;,&quot;&quot;)]">
                                  <ueab:ExcelApplicationCard.Body>
                                    <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                                      </ActivityAction.Argument>
                                      <Sequence sap:VirtualizedContainerService.HintSize="450,623" sap2010:WorkflowViewState.IdRef="Sequence_63">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(in_Config(&quot;BSBkrCelRef&quot;).ToString)]" DisplayName="Write - Broker Name" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="WriteCellX_8" Value="[row(in_Config(&quot;BSBrokerColName&quot;).ToString).ToString]">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ueab:WriteCellX>
                                        <ueab:FormatRangeX DisplayName="Format - Broker name" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="FormatRangeX_10" Range="[Excel.Sheet(&quot;Sheet1&quot;).Range(in_Config(&quot;BSBkrCelRef&quot;).ToString)]">
                                          <ueab:FormatRangeX.Alignment>
                                            <ui:AlignmentOptions HorizontalAlignment="xlHAlignGeneral" VerticalAlignment="xlVAlignBottom" WrapText="False" />
                                          </ueab:FormatRangeX.Alignment>
                                          <ueab:FormatRangeX.Font>
                                            <ui:FontOptions Color="Black" FillColor="Transparent" FontFamilyName="Calibri" Size="14" Style="Bold" UnderlineStyle="None" />
                                          </ueab:FormatRangeX.Font>
                                          <ueab:FormatRangeX.Format>
                                            <ueab:GeneralFormat />
                                          </ueab:FormatRangeX.Format>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ueab:FormatRangeX>
                                        <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(in_Config(&quot;BSStmtCelRef&quot;).ToString)]" DisplayName="Write - Stmt of account" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="WriteCellX_9" Value="[in_Config(&quot;BSStmtCelVal&quot;).ToString.Replace(&quot;dd.MM.yyyy&quot;,Today.ToString(&quot;dd.MM.yyyy&quot;))]">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ueab:WriteCellX>
                                        <ueab:FormatRangeX DisplayName="Format - Stmt of account" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="FormatRangeX_11" Range="[Excel.Sheet(&quot;Sheet1&quot;).Range(in_Config(&quot;BSStmtCelRef&quot;).ToString)]">
                                          <ueab:FormatRangeX.Alignment>
                                            <ui:AlignmentOptions HorizontalAlignment="xlHAlignGeneral" VerticalAlignment="xlVAlignBottom" WrapText="False" />
                                          </ueab:FormatRangeX.Alignment>
                                          <ueab:FormatRangeX.Font>
                                            <ui:FontOptions Color="Black" FillColor="Transparent" FontFamilyName="Calibri" Size="14" Style="Bold" UnderlineStyle="None" />
                                          </ueab:FormatRangeX.Font>
                                          <ueab:FormatRangeX.Format>
                                            <ueab:GeneralFormat />
                                          </ueab:FormatRangeX.Format>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ueab:FormatRangeX>
                                        <ueab:WriteRangeX Destination="[Excel.Sheet(&quot;Sheet1&quot;).Range(in_Config(&quot;BSDataCelRef&quot;).ToString)]" DisplayName="Write - Filtered data" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="WriteRangeX_5" IgnoreEmptySource="True" Source="[dt_FilteredData]">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ueab:WriteRangeX>
                                        <ueab:FormatRangeX DisplayName="Format - Headers" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="FormatRangeX_12" Range="[Excel.Sheet(&quot;Sheet1&quot;).Range(in_Config(&quot;BSDataCelRef&quot;).ToString + &quot;:ZZ&quot; + Regex.Replace(in_Config(&quot;BSDataCelRef&quot;).ToString,&quot;[A-z]+&quot;,String.Empty))]">
                                          <ueab:FormatRangeX.Alignment>
                                            <ui:AlignmentOptions HorizontalAlignment="xlHAlignGeneral" VerticalAlignment="xlVAlignBottom" WrapText="False" />
                                          </ueab:FormatRangeX.Alignment>
                                          <ueab:FormatRangeX.Font>
                                            <ui:FontOptions Color="Black" FillColor="Transparent" FontFamilyName="Arial" Size="10" Style="Bold" UnderlineStyle="None" />
                                          </ueab:FormatRangeX.Font>
                                          <ueab:FormatRangeX.Format>
                                            <ueab:GeneralFormat />
                                          </ueab:FormatRangeX.Format>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ueab:FormatRangeX>
                                      </Sequence>
                                    </ActivityAction>
                                  </ueab:ExcelApplicationCard.Body>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ueab:ExcelApplicationCard>
                              </ActivityAction>
                            </ueab:ExcelProcessScopeX.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ueab:ExcelProcessScopeX>
                          <ui:ExcelApplicationScope Password="{x:Null}" SensitivityLabel="{x:Null}" CreateNewFile="False" DisplayName="Format broker statement" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_4" InstanceCachePeriod="3000" SensitivityOperation="None" Visible="False" WorkbookPath="[in_Config(&quot;BrokerStatementsFolderPath&quot;).ToString.Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;)).Replace(&quot;MMMM&quot;,Today.ToString(&quot;MMMM&quot;)).Replace(&quot;MC&quot;,Today.Month.ToString) + &quot;\&quot; + row(in_Config(&quot;BSCreditCtrlColName&quot;).ToString).ToString + &quot;\&quot; + in_Config(&quot;BkrStmtFileName&quot;).ToString.Replace(&quot;Bkr&quot;,row(in_Config(&quot;BSBrokerColName&quot;).ToString).ToString.Replace(&quot;\&quot;,&quot;&quot;).Replace(&quot;/&quot;,&quot;&quot;).Replace(&quot;:&quot;,&quot;&quot;).Replace(&quot;*&quot;,&quot;&quot;).Replace(&quot;?&quot;,&quot;&quot;).Replace(Chr(34),&quot;&quot;).Replace(&quot;&lt;&quot;,&quot;&quot;).Replace(&quot;&gt;&quot;,&quot;&quot;).Replace(&quot;|&quot;,&quot;&quot;)).Replace(&quot;MMMM&quot;,Today.ToString(&quot;MMMM&quot;)).Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;)).Replace(&quot; - BC&quot;,&quot;&quot;)]">
                            <ui:ExcelApplicationScope.Body>
                              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                </ActivityAction.Argument>
                                <Sequence sap:VirtualizedContainerService.HintSize="496,1116" sap2010:WorkflowViewState.IdRef="Sequence_69">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ExcelLookUpRange DisplayName="Lookup - Amount" sap:VirtualizedContainerService.HintSize="434,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_2" Range="A1:ZZ1000" Result="[ReqCellRef]" SheetName="Sheet1" Value="[in_Config(&quot;GnEpiColName&quot;).ToString]" />
                                  <Assign DisplayName="Assign - Remove number" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_29">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[ReqCellRef]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(ReqCellRef,"\d","")]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_92" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Format data: Started&quot;]" />
                                  <ui:CreateFile ContinueOnError="{x:Null}" Output="{x:Null}" Path="{x:Null}" DisplayName="Create File - Format" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="CreateFile_7" Name="[in_LocalInputFolderPath + &quot;\Format.txt&quot;]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:CreateFile>
                                  <ui:WriteTextFile File="{x:Null}" DisplayName="Write Text File - Format" FileName="[in_LocalInputFolderPath + &quot;\Format.txt&quot;]" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="WriteTextFile_5" Text="[&quot;Sub Format()&quot; + System.Environment.NewLine + &quot;Sheets(&quot; + Chr(34) + &quot;Sheet1&quot; + Chr(34) + &quot;).Select&quot; + System.Environment.NewLine + &quot;ActiveWindow.DisplayGridlines = False&quot; + System.Environment.NewLine + &quot;ActiveWindow.Zoom = &quot; + in_Config(&quot;BSZoom&quot;).ToString.Trim + System.Environment.NewLine + &quot;Cells.Select&quot; + System.Environment.NewLine + &quot;Cells.EntireColumn.AutoFit&quot; + System.Environment.NewLine + &quot;Range(&quot; + Chr(34) + reqCellRef + &quot;:&quot; + reqCellRef + Chr(34) + &quot;).Select&quot; + System.Environment.NewLine + &quot;Selection.NumberFormat = &quot; + Chr(34) + in_Config(&quot;BSNumFormat&quot;).ToString.Trim + Chr(34) + System.Environment.NewLine + &quot;End Sub&quot;]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:WriteTextFile>
                                  <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[in_LocalInputFolderPath + &quot;\Format.txt&quot;]" DisplayName="Invoke VBA - Format" EntryMethodName="Format" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="InvokeVBA_2">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:InvokeVBA>
                                  <ui:DeleteFileX DisplayName="Delete File - Format" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="DeleteFileX_5" Path="[in_LocalInputFolderPath + &quot;\Format.txt&quot;]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:DeleteFileX>
                                  <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="434,25" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_2" />
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_93" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Format data: Completed&quot;]" />
                                </Sequence>
                              </ActivityAction>
                            </ui:ExcelApplicationScope.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ExcelApplicationScope>
                          <bes:InsertImage ExecutionResult="{x:Null}" FilePassword="{x:Null}" ModifyPassword="{x:Null}" ContinueOnError="True" Delay="3" DisplayName="Insert - Talbot logo" FilePath="[in_Config(&quot;BrokerStatementsFolderPath&quot;).ToString.Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;)).Replace(&quot;MMMM&quot;,Today.ToString(&quot;MMMM&quot;)).Replace(&quot;MC&quot;,Today.Month.ToString) + &quot;\&quot; + row(in_Config(&quot;BSCreditCtrlColName&quot;).ToString).ToString + &quot;\&quot; + in_Config(&quot;BkrStmtFileName&quot;).ToString.Replace(&quot;Bkr&quot;,row(in_Config(&quot;BSBrokerColName&quot;).ToString).ToString.Replace(&quot;\&quot;,&quot;&quot;).Replace(&quot;/&quot;,&quot;&quot;).Replace(&quot;:&quot;,&quot;&quot;).Replace(&quot;*&quot;,&quot;&quot;).Replace(&quot;?&quot;,&quot;&quot;).Replace(Chr(34),&quot;&quot;).Replace(&quot;&lt;&quot;,&quot;&quot;).Replace(&quot;&gt;&quot;,&quot;&quot;).Replace(&quot;|&quot;,&quot;&quot;)).Replace(&quot;MMMM&quot;,Today.ToString(&quot;MMMM&quot;)).Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;)).Replace(&quot; - BC&quot;,&quot;&quot;)]" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="InsertImage_2" ImagePath="[in_Config(&quot;ImagePath&quot;).ToString.Trim]" SheetName="Sheet1">
                            <bes:InsertImage.Size>
                              <beu:ObjectSize Height="60" Left="625" Top="5" Width="100" />
                            </bes:InsertImage.Size>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </bes:InsertImage>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_20" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;No data exists for broker - &quot; + row(in_Config(&quot;BSBrokerColName&quot;).ToString).ToString + &quot; and broker no - &quot; + row(in_Config(&quot;BSBrokerNoColName&quot;).ToString).ToString]" />
                </If.Else>
              </If>
              <ueab:ExcelProcessScopeX ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" DisplayAlerts="False" DisplayName="Scope - Master Log" sap:VirtualizedContainerService.HintSize="555,471" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_6" MacroSettings="EnableAll" ProcessMode="AlwaysCreateNew" ShowExcelWindow="False">
                <ueab:ExcelProcessScopeX.Body>
                  <ActivityAction x:TypeArguments="ui:IExcelProcess">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                    </ActivityAction.Argument>
                    <ueab:ExcelApplicationCard Password="{x:Null}" SensitivityLabel="{x:Null}" CreateNewFile="False" DisplayName="Use - Master log" sap:VirtualizedContainerService.HintSize="434,344" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_6" ReadFormatting="DisplayValue" ResizeWindow="None" SensitivityOperation="None" UseTemplate="True" WorkbookPath="[in_LocalInputFolderPath + &quot;\&quot; + Path.GetFileName(in_Config(&quot;MasterLogFilePath&quot;).ToString.Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;)))]">
                      <ueab:ExcelApplicationCard.Body>
                        <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                          </ActivityAction.Argument>
                          <ueab:WriteRangeX Append="True" Destination="[Excel.Sheet(Today.ToString(&quot;MMMM yyyy&quot;))]" DisplayName="Append filtered data" ExcludeHeaders="True" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="WriteRangeX_3" IgnoreEmptySource="False" Source="[dt_MasterLogData]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ueab:WriteRangeX>
                        </ActivityAction>
                      </ueab:ExcelApplicationCard.Body>
                    </ueab:ExcelApplicationCard>
                  </ActivityAction>
                </ueab:ExcelProcessScopeX.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ueab:ExcelProcessScopeX>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="555,141" sap2010:WorkflowViewState.IdRef="LogMessage_52" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Master Log updated with: Broker - &quot; + row(in_Config(&quot;BSBrokerColName&quot;).ToString).ToString + &quot; &amp; Code - &quot; + row(in_Config(&quot;BSBrokerNoColName&quot;).ToString).ToString]" />
            </Sequence>
          </ActivityAction>
        </ui:ForEachRow.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEachRow>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="631,141" sap2010:WorkflowViewState.IdRef="LogMessage_51" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Save broker statements and update master log: Completed&quot;]" />
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Bot will send separate emails for each broker" DisplayName="Send Broker emails" sap:VirtualizedContainerService.HintSize="800,4639" sap2010:WorkflowViewState.IdRef="Sequence_36">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="738,141" sap2010:WorkflowViewState.IdRef="LogMessage_53" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Send broker emails: Started&quot;]" />
      <ueab:ExcelProcessScopeX ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" DisplayAlerts="False" DisplayName="Scope - Master Log" sap:VirtualizedContainerService.HintSize="738,52" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_7" MacroSettings="EnableAll" ProcessMode="AlwaysCreateNew" ShowExcelWindow="False">
        <ueab:ExcelProcessScopeX.Body>
          <ActivityAction x:TypeArguments="ui:IExcelProcess">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
            </ActivityAction.Argument>
            <ueab:ExcelApplicationCard Password="{x:Null}" SensitivityLabel="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Use - Master log" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_7" ReadFormatting="DisplayValue" ResizeWindow="None" SensitivityOperation="None" WorkbookPath="[in_LocalInputFolderPath + &quot;\&quot; + Path.GetFileName(in_Config(&quot;MasterLogFilePath&quot;).ToString.Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;)))]">
              <ueab:ExcelApplicationCard.Body>
                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                  </ActivityAction.Argument>
                  <ueab:ReadRangeX DisplayName="Read All data" sap:VirtualizedContainerService.HintSize="444,169" sap2010:WorkflowViewState.IdRef="ReadRangeX_3" Range="[Excel.Sheet(Today.ToString(&quot;MMMM yyyy&quot;)).Range(&quot;A1&quot;)]" ReadFormatting="DisplayValue" SaveTo="[dt_MasterLogData]" VisibleOnly="False">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ueab:ReadRangeX>
                </ActivityAction>
              </ueab:ExcelApplicationCard.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ueab:ExcelApplicationCard>
          </ActivityAction>
        </ueab:ExcelProcessScopeX.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ueab:ExcelProcessScopeX>
      <Assign DisplayName="Assign - Initialise broker name" sap:VirtualizedContainerService.HintSize="738,82" sap2010:WorkflowViewState.IdRef="Assign_14">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[LatestBrokerName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">
            <Literal x:TypeArguments="x:String" Value="" />
          </InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign - Initialise broker code" sap:VirtualizedContainerService.HintSize="738,82" sap2010:WorkflowViewState.IdRef="Assign_34">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[LatestBrokerCode]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">
            <Literal x:TypeArguments="x:String" Value="" />
          </InArgument>
        </Assign.Value>
      </Assign>
      <ui:BuildDataTable DataTable="[dt_BkrMissing]" DisplayName="Build - Broker contact missing dt" sap:VirtualizedContainerService.HintSize="738,52" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xD;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xD;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xD;&#xA;      &lt;xs:complexType&gt;&#xD;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xD;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xD;&#xA;            &lt;xs:complexType&gt;&#xD;&#xA;              &lt;xs:sequence&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Broker&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xD;&#xA;                  &lt;xs:simpleType&gt;&#xD;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xD;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xD;&#xA;                    &lt;/xs:restriction&gt;&#xD;&#xA;                  &lt;/xs:simpleType&gt;&#xD;&#xA;                &lt;/xs:element&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Broker_x0020_Code&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;CC&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;              &lt;/xs:sequence&gt;&#xD;&#xA;            &lt;/xs:complexType&gt;&#xD;&#xA;          &lt;/xs:element&gt;&#xD;&#xA;        &lt;/xs:choice&gt;&#xD;&#xA;      &lt;/xs:complexType&gt;&#xD;&#xA;    &lt;/xs:element&gt;&#xD;&#xA;  &lt;/xs:schema&gt;&#xD;&#xA;&lt;/NewDataSet&gt;">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:BuildDataTable>
      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_MasterLogData]" DisplayName="For Each Row - Send emails" sap:VirtualizedContainerService.HintSize="738,3707" sap2010:WorkflowViewState.IdRef="ForEachRow_6">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="704,3521" sap2010:WorkflowViewState.IdRef="Sequence_35">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:FilterDataTable DataTable="[dt_BrokerDetails]" DisplayName="Filter - Broker details" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="662,161" sap2010:WorkflowViewState.IdRef="FilterDataTable_4" OutputDataTable="[dt_Temp]" SelectColumnsMode="Keep">
                <ui:FilterDataTable.Filters>
                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                    <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                      <ui:FilterOperationArgument.Column>
                        <InArgument x:TypeArguments="x:String">[in_Config("BDBrokerColName").ToString]</InArgument>
                      </ui:FilterOperationArgument.Column>
                      <ui:FilterOperationArgument.Operand>
                        <InArgument x:TypeArguments="x:Object">[row(in_Config("MLBrokerColName").ToString)]</InArgument>
                      </ui:FilterOperationArgument.Operand>
                    </ui:FilterOperationArgument>
                    <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                      <ui:FilterOperationArgument.Column>
                        <InArgument x:TypeArguments="x:String">[in_Config("BDBrokerCodeColName").ToString]</InArgument>
                      </ui:FilterOperationArgument.Column>
                      <ui:FilterOperationArgument.Operand>
                        <InArgument x:TypeArguments="x:Object">[row(in_Config("MLBkrCodeLysColName").ToString)]</InArgument>
                      </ui:FilterOperationArgument.Operand>
                    </ui:FilterOperationArgument>
                  </scg:List>
                </ui:FilterDataTable.Filters>
                <ui:FilterDataTable.SelectColumns>
                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                    <x:Null />
                  </scg:List>
                </ui:FilterDataTable.SelectColumns>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:FilterDataTable>
              <If sap2010:Annotation.AnnotationText="If same broker, then bot will not send another email" Condition="[(row(in_Config(&quot;MLBrokerColName&quot;).ToString).ToString.ToLower = LatestBrokerName.ToLower) AND (row(in_Config(&quot;MLBkrCodeLysColName&quot;).ToString).ToString.ToLower = LatestBrokerCode.ToLower)]" DisplayName="If - Same broker" sap:VirtualizedContainerService.HintSize="662,3232" sap2010:WorkflowViewState.IdRef="If_18">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_21" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[row(in_Config(&quot;MLBrokerColName&quot;).ToString).ToString + &quot; - &quot; + row(in_Config(&quot;MLBkrCodeLysColName&quot;).ToString).ToString + &quot; - Same broker, hence skipping sending another email&quot;]" />
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="628,2878" sap2010:WorkflowViewState.IdRef="Sequence_34">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - New broker name" sap:VirtualizedContainerService.HintSize="586,82" sap2010:WorkflowViewState.IdRef="Assign_15">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[LatestBrokerName]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[row(in_Config("MLBrokerColName").ToString).ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Assign - New broker code" sap:VirtualizedContainerService.HintSize="586,82" sap2010:WorkflowViewState.IdRef="Assign_33">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[LatestBrokerCode]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[row(in_Config("MLBkrCodeLysColName").ToString).ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[dt_Temp.RowCount &gt; 0]" DisplayName="If - Broker contact exist" sap:VirtualizedContainerService.HintSize="586,2546" sap2010:WorkflowViewState.IdRef="If_17">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="552,2223" sap2010:WorkflowViewState.IdRef="Sequence_33">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[not String.IsNullOrEmpty(dt_Temp.Rows(0).Item(in_Config(&quot;BDContactColName&quot;).ToString).ToString)]" DisplayName="If - Broker contact found" sap:VirtualizedContainerService.HintSize="510,2135" sap2010:WorkflowViewState.IdRef="If_22">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="476,1498" sap2010:WorkflowViewState.IdRef="Sequence_48">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign DisplayName="Assign - Get files" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_16">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="s:String[]">[arr_Files]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(in_Config("BrokerStatementsFolderPath").ToString.Replace("yyyy",Today.ToString("yyyy")).Replace("MMMM",Today.ToString("MMMM")).Replace("MC",Today.Month.ToString) + "\" + dt_Temp.Rows(0).Item(in_Config("BDCreditCtrlColName").ToString).ToString)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_17">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="scg:IEnumerable(x:String)">[AttachmentsList]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="scg:List(x:String)">[new List(of string)]</InArgument>
                                  </Assign.Value>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Assign>
                                <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Create collection of attachments to be sent" DisplayName="For each file" sap:VirtualizedContainerService.HintSize="434,717" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[arr_Files]">
                                  <ui:ForEach.Body>
                                    <ActivityAction x:TypeArguments="x:String">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="x:String" Name="file" />
                                      </ActivityAction.Argument>
                                      <Sequence sap:VirtualizedContainerService.HintSize="376,550" sap2010:WorkflowViewState.IdRef="Sequence_75">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If Condition="[(from dr in dt_MasterLogData where dr(in_Config(&quot;MLBrokerColName&quot;).ToString).ToString.Equals(row(in_Config(&quot;MLBrokerColName&quot;).ToString).ToString) select dr).Count &gt; 1]" DisplayName="If - Multi broker codes?" sap:VirtualizedContainerService.HintSize="334,462" sap2010:WorkflowViewState.IdRef="If_24">
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="300,140" sap2010:WorkflowViewState.IdRef="Sequence_76">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If Condition="[file.ToLower.Contains(row(in_Config(&quot;MLBrokerColName&quot;).ToString).ToString.ToLower.Replace(&quot;\&quot;,&quot;&quot;).Replace(&quot;/&quot;,&quot;&quot;).Replace(&quot;:&quot;,&quot;&quot;).Replace(&quot;*&quot;,&quot;&quot;).Replace(&quot;?&quot;,&quot;&quot;).Replace(Chr(34),&quot;&quot;).Replace(&quot;&lt;&quot;,&quot;&quot;).Replace(&quot;&gt;&quot;,&quot;&quot;).Replace(&quot;|&quot;,&quot;&quot;)) AND file.ToLower.Contains(Today.ToString(&quot;MMMM&quot;).ToLower) AND file.ToLower.Contains(Today.ToString(&quot;yyyy&quot;).ToLower) AND file.ToLower.Contains(row(in_Config(&quot;MLBkrCodeLysColName&quot;).ToString).ToString.ToLower)]" DisplayName="If - Required file" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="If_25">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <If.Then>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="476,351" sap2010:WorkflowViewState.IdRef="Sequence_78">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_35">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="scg:IEnumerable(x:String)">[AttachmentsList]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="scg:IEnumerable(x:String)">[AttachmentsList.Append(file)]</InArgument>
                                                      </Assign.Value>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </Assign>
                                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_95" Level="Info" Message="[&quot;File added to attachment list: &quot; + file]" />
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="WriteLine_6" Text="Not the required attachment">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </WriteLine>
                                                </If.Else>
                                              </If>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="300,140" sap2010:WorkflowViewState.IdRef="Sequence_77">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If Condition="[file.ToLower.Contains(row(in_Config(&quot;MLBrokerColName&quot;).ToString).ToString.ToLower.Replace(&quot;\&quot;,&quot;&quot;).Replace(&quot;/&quot;,&quot;&quot;).Replace(&quot;:&quot;,&quot;&quot;).Replace(&quot;*&quot;,&quot;&quot;).Replace(&quot;?&quot;,&quot;&quot;).Replace(Chr(34),&quot;&quot;).Replace(&quot;&lt;&quot;,&quot;&quot;).Replace(&quot;&gt;&quot;,&quot;&quot;).Replace(&quot;|&quot;,&quot;&quot;)) AND file.ToLower.Contains(Today.ToString(&quot;MMMM&quot;).ToLower) AND file.ToLower.Contains(Today.ToString(&quot;yyyy&quot;).ToLower)]" DisplayName="If - Required file" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="If_16">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <If.Then>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="476,351" sap2010:WorkflowViewState.IdRef="Sequence_70">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_30">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="scg:IEnumerable(x:String)">[AttachmentsList]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="scg:IEnumerable(x:String)">[AttachmentsList.Append(file)]</InArgument>
                                                      </Assign.Value>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </Assign>
                                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_94" Level="Info" Message="[&quot;File added to attachment list: &quot; + file]" />
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="Not the required attachment">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </WriteLine>
                                                </If.Else>
                                              </If>
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:ForEach.Body>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:ForEach>
                                <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" ContinueOnError="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" AttachmentsCollection="[AttachmentsList]" Body="[in_Config(&quot;SuccessBrokerMailBody&quot;).ToString.Replace(&quot;C.A.R.S&quot;,dt_Temp.Rows(0).Item(in_Config(&quot;BSCreditCtrlColName&quot;).ToString).ToString)]" Cc="[dt_Temp.Rows(0).Item(in_Config(&quot;BDCtrlContactColName&quot;).ToString).ToString]" DisplayName="Broker email" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="SendOutlookMail_5" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" SentOnBehalfOfName="[in_Config(&quot;SentOnBehalf&quot;).ToString]" Subject="[in_Config(&quot;SuccessBrokerMailSubject&quot;).ToString.Replace(&quot;dd.MM.yy&quot;,Today.ToString(&quot;dd.MM.yy&quot;)).Replace(&quot;&lt;-Bkr-&gt;&quot;,row(in_Config(&quot;MLBrokerColName&quot;).ToString).ToString)]" To="[dt_Temp.Rows(0).Item(in_Config(&quot;BDContactColName&quot;).ToString).ToString]">
                                  <ui:SendOutlookMail.Files>
                                    <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                      <InArgument x:TypeArguments="x:String" />
                                    </scg:List>
                                  </ui:SendOutlookMail.Files>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:SendOutlookMail>
                                <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="434,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_6" MethodName="Collect" TargetType="s:GC">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </InvokeMethod>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_55" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[row(in_Config(&quot;MLBrokerColName&quot;).ToString).ToString + &quot; - &quot; + row(in_Config(&quot;MLBkrCodeLysColName&quot;).ToString).ToString + &quot; - broker email sent&quot;]" />
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap:VirtualizedContainerService.HintSize="376,455" sap2010:WorkflowViewState.IdRef="Sequence_49">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_75" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Broker contact email address not found for - &quot; + row(in_Config(&quot;MLBrokerColName&quot;).ToString).ToString + &quot; &amp; &quot; + row(in_Config(&quot;MLBkrCodeLysColName&quot;).ToString).ToString]" />
                                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[new String(){dt_Temp.Rows(0).Item(in_Config(&quot;BDBrokerColName&quot;).ToString).ToString,dt_Temp.Rows(0).Item(in_Config(&quot;BDBrokerCodeColName&quot;).ToString).ToString,dt_Temp.Rows(0).Item(in_Config(&quot;BDCtrlContactColName&quot;).ToString).ToString}]" DataTable="[dt_BkrMissing]" DisplayName="Add missing broker name" sap:VirtualizedContainerService.HintSize="334,186" sap2010:WorkflowViewState.IdRef="AddDataRow_3">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:AddDataRow>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_22" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[row(in_Config(&quot;MLBrokerColName&quot;).ToString).ToString + &quot; - &quot; + row(in_Config(&quot;MLBkrCodeLysColName&quot;).ToString).ToString + &quot; - Broker not found in the Broker details sheet&quot;]" />
                      </If.Else>
                    </If>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEachRow.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEachRow>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="738,141" sap2010:WorkflowViewState.IdRef="LogMessage_54" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Send broker emails: Completed&quot;]" />
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Bot will apply all borders and copy the updated Master Log file back to shared drive" DisplayName="Format &amp; Copy Master log to Shared drive" sap:VirtualizedContainerService.HintSize="496,123" sap2010:WorkflowViewState.IdRef="Sequence_39">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_56" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Format and copy master log to shared drive: Started&quot;]" />
      <ueab:ExcelProcessScopeX ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" DisplayAlerts="False" DisplayName="Scope - Master Log" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_8" MacroSettings="EnableAll" ProcessMode="AlwaysCreateNew" ShowExcelWindow="False">
        <ueab:ExcelProcessScopeX.Body>
          <ActivityAction x:TypeArguments="ui:IExcelProcess">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
            </ActivityAction.Argument>
            <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" SensitivityLabel="{x:Null}" CreateNewFile="False" DisplayName="Use - Master Log" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_8" ResizeWindow="None" SensitivityOperation="None" WorkbookPath="[in_LocalInputFolderPath + &quot;\&quot; + Path.GetFileName(in_Config(&quot;MasterLogFilePath&quot;).ToString.Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;)))]">
              <ueab:ExcelApplicationCard.Body>
                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                  </ActivityAction.Argument>
                  <Sequence sap:VirtualizedContainerService.HintSize="506,1102" sap2010:WorkflowViewState.IdRef="Sequence_38">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ueab:ReadRangeX DisplayName="Read - All Data" HasHeaders="False" sap:VirtualizedContainerService.HintSize="444,169" sap2010:WorkflowViewState.IdRef="ReadRangeX_4" Range="[Excel.Sheet(Today.ToString(&quot;MMMM yyyy&quot;)).Range(&quot;A1&quot;)]" SaveTo="[dt_Temp]" VisibleOnly="False">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ueab:ReadRangeX>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="444,141" sap2010:WorkflowViewState.IdRef="LogMessage_58" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Format data: Started&quot;]" />
                    <ui:CreateFile ContinueOnError="{x:Null}" Output="{x:Null}" Path="{x:Null}" DisplayName="Create File - Format" sap:VirtualizedContainerService.HintSize="444,52" sap2010:WorkflowViewState.IdRef="CreateFile_1" Name="[in_LocalInputFolderPath + &quot;\Format.txt&quot;]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:CreateFile>
                    <ui:WriteTextFile File="{x:Null}" DisplayName="Write Text File - Format" FileName="[in_LocalInputFolderPath + &quot;\Format.txt&quot;]" sap:VirtualizedContainerService.HintSize="444,52" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[&quot;Sub Format()&quot; + System.Environment.NewLine + &quot;Sheets(&quot; + Chr(34) + Today.ToString(&quot;MMMM yyyy&quot;) + Chr(34) + &quot;).Select&quot; + System.Environment.NewLine + &quot;Range(&quot; + Chr(34) + &quot;A1:&quot; + in_Config(&quot;MLLastColRef&quot;).ToString + dt_Temp.RowCount.ToString + Chr(34) + &quot;).Select&quot; + System.Environment.NewLine + &quot;Selection.Borders(xlDiagonalDown).LineStyle = xlNone&quot; + System.Environment.NewLine + &quot;Selection.Borders(xlDiagonalUp).LineStyle = xlNone&quot; + System.Environment.NewLine + &quot;With Selection.Borders(xlEdgeLeft)&quot; + System.Environment.NewLine + &quot;.LineStyle = xlContinuous&quot; + System.Environment.NewLine + &quot;.ColorIndex = 0&quot; + System.Environment.NewLine + &quot;.TintAndShade = 0&quot; + System.Environment.NewLine + &quot;.Weight = xlThin&quot; + System.Environment.NewLine + &quot;End With&quot; + System.Environment.NewLine + &quot;With Selection.Borders(xlEdgeTop)&quot; + System.Environment.NewLine + &quot;.LineStyle = xlContinuous&quot; + System.Environment.NewLine + &quot;.ColorIndex = 0&quot; + System.Environment.NewLine + &quot;.TintAndShade = 0&quot; + System.Environment.NewLine + &quot;.Weight = xlThin&quot; + System.Environment.NewLine + &quot;End With&quot; + System.Environment.NewLine + &quot;With Selection.Borders(xlEdgeBottom)&quot; + System.Environment.NewLine + &quot;.LineStyle = xlContinuous&quot; + System.Environment.NewLine + &quot;.ColorIndex = 0&quot; + System.Environment.NewLine + &quot;.TintAndShade = 0&quot; + System.Environment.NewLine + &quot;.Weight = xlThin&quot; + System.Environment.NewLine + &quot;End With&quot; + System.Environment.NewLine + &quot;With Selection.Borders(xlEdgeRight)&quot; + System.Environment.NewLine + &quot;.LineStyle = xlContinuous&quot; + System.Environment.NewLine + &quot;.ColorIndex = 0&quot; + System.Environment.NewLine + &quot;.TintAndShade = 0&quot; + System.Environment.NewLine + &quot;.Weight = xlThin&quot; + System.Environment.NewLine + &quot;End With&quot; + System.Environment.NewLine + &quot;With Selection.Borders(xlInsideVertical)&quot; + System.Environment.NewLine + &quot;.LineStyle = xlContinuous&quot; + System.Environment.NewLine + &quot;.ColorIndex = 0&quot; + System.Environment.NewLine + &quot;.TintAndShade = 0&quot; + System.Environment.NewLine + &quot;.Weight = xlThin&quot; + System.Environment.NewLine + &quot;End With&quot; + System.Environment.NewLine + &quot;With Selection.Borders(xlInsideHorizontal)&quot; + System.Environment.NewLine + &quot;.LineStyle = xlContinuous&quot; + System.Environment.NewLine + &quot;.ColorIndex = 0&quot; + System.Environment.NewLine + &quot;.TintAndShade = 0&quot; + System.Environment.NewLine + &quot;.Weight = xlThin&quot; + System.Environment.NewLine + &quot;End With&quot; + System.Environment.NewLine + &quot;Rows(&quot; + Chr(34) + &quot;2:2&quot; + Chr(34) + &quot;).Select&quot; + System.Environment.NewLine + &quot;Selection.Delete Shift:=xlUp&quot; + System.Environment.NewLine + &quot;End Sub&quot;]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:WriteTextFile>
                    <ueab:InvokeVBAX Result="{x:Null}" CodeFilePath="[in_LocalInputFolderPath + &quot;\Format.txt&quot;]" DisplayName="Invoke VBA - Format" EntryMethodName="Format" sap:VirtualizedContainerService.HintSize="444,52" sap2010:WorkflowViewState.IdRef="InvokeVBAX_1" Workbook="[Excel]">
                      <ueab:InvokeVBAX.Body>
                        <ActivityAction>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,113" sap2010:WorkflowViewState.IdRef="Sequence_37">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </ActivityAction>
                      </ueab:InvokeVBAX.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ueab:InvokeVBAX>
                    <ui:DeleteFileX DisplayName="Delete File - Format" sap:VirtualizedContainerService.HintSize="444,52" sap2010:WorkflowViewState.IdRef="DeleteFileX_1" Path="[in_LocalInputFolderPath + &quot;\Format.txt&quot;]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:DeleteFileX>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="444,141" sap2010:WorkflowViewState.IdRef="LogMessage_59" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Format data: Completed&quot;]" />
                    <ueab:SaveExcelFileX DisplayName="Save File" sap:VirtualizedContainerService.HintSize="444,52" sap2010:WorkflowViewState.IdRef="SaveExcelFileX_1" Workbook="[Excel]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ueab:SaveExcelFileX>
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelApplicationCard.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ueab:ExcelApplicationCard>
          </ActivityAction>
        </ueab:ExcelProcessScopeX.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ueab:ExcelProcessScopeX>
      <ui:CopyFile ContinueOnError="{x:Null}" Destination="[in_Config(&quot;MasterLogFilePath&quot;).ToString.Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;))]" DisplayName="Copy Master Log" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="CopyFile_7" Overwrite="True" Path="[in_LocalInputFolderPath + &quot;\&quot; + Path.GetFileName(in_Config(&quot;MasterLogFilePath&quot;).ToString.Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;)))]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:CopyFile>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_23" Level="Info" Message="[&quot;Master Log copied back to shared drive&quot;]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_57" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Format and copy master log to shared drive: Completed&quot;]" />
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Bot will be sending summary email to " DisplayName="Send Summary Email" sap:VirtualizedContainerService.HintSize="496,112" sap2010:WorkflowViewState.IdRef="Sequence_40">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_60" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Send summary email: Started&quot;]" />
      <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" ContinueOnError="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="[in_Config(&quot;SummaryMailBody&quot;).ToString.Replace(&quot;name&quot;,System.Environment.UserName).Replace(&quot;&lt;-masterFilePath-&gt;&quot;,in_Config(&quot;MasterLogFilePath&quot;).ToString.Replace(&quot;yyyy&quot;,Today.ToString(&quot;yyyy&quot;)))]" Cc="[in_Config(&quot;SummaryEmailCc&quot;).ToString]" DisplayName="Send Summary Email" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="SendOutlookMail_6" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" SentOnBehalfOfName="[in_Config(&quot;SentOnBehalf&quot;).ToString]" Subject="[in_Config(&quot;SummaryMailSubject&quot;).ToString]" To="[in_Config(&quot;SummaryEmailTo&quot;).ToString]">
        <ui:SendOutlookMail.Files>
          <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
            <InArgument x:TypeArguments="x:String" />
          </scg:List>
        </ui:SendOutlookMail.Files>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:SendOutlookMail>
      <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="388,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_7" MethodName="Collect" TargetType="s:GC">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </InvokeMethod>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_61" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Send summary email: Completed&quot;]" />
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Update 'StatementSentFlag' in Config file" DisplayName="Update Config Flag" sap:VirtualizedContainerService.HintSize="496,112" sap2010:WorkflowViewState.IdRef="Sequence_41">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_62" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Update statement sent flag in config: Started&quot;]" />
      <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_31">
        <Assign.To>
          <OutArgument x:TypeArguments="s:DateTime">[firstDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:DateTime">[DateTime.Parse(Today.ToString("yyyy") + "-" + Today.ToString("MM") + "-" + "01")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_32">
        <Assign.To>
          <OutArgument x:TypeArguments="s:DateTime">[lastDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:DateTime">[DateTime.Parse(Today.ToString("yyyy-MM-dd"))]</InArgument>
        </Assign.Value>
      </Assign>
      <t:CalculateWorkingDays NonWorkingDays="{x:Null}" FirstDate="[firstDate]" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="CalculateWorkingDays_1" LastDate="[lastDate]" ResultDays="[workingDayCount]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </t:CalculateWorkingDays>
      <ueab:ExcelProcessScopeX ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" DisplayAlerts="False" DisplayName="Scope - Config file" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_9" MacroSettings="EnableAll" ProcessMode="AlwaysCreateNew" ShowExcelWindow="False">
        <ueab:ExcelProcessScopeX.Body>
          <ActivityAction x:TypeArguments="ui:IExcelProcess">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
            </ActivityAction.Argument>
            <ueab:ExcelApplicationCard Password="{x:Null}" SensitivityLabel="{x:Null}" CreateNewFile="False" DisplayName="Use - Config file" sap:VirtualizedContainerService.HintSize="530,738" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_9" ReadFormatting="DisplayValue" ResizeWindow="None" SensitivityOperation="None" WorkbookPath="[in_ConfigFilePath]">
              <ueab:ExcelApplicationCard.Body>
                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                  </ActivityAction.Argument>
                  <Sequence sap:VirtualizedContainerService.HintSize="496,469" sap2010:WorkflowViewState.IdRef="Sequence_71">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Settings&quot;).Cell(&quot;B4&quot;)]" DisplayName="Write - Flag" sap:VirtualizedContainerService.HintSize="434,159" sap2010:WorkflowViewState.IdRef="WriteCellX_5" Value="[&quot;TRUE&quot;]" />
                    <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Settings&quot;).Cell(&quot;B5&quot;)]" DisplayName="Write - Day count" sap:VirtualizedContainerService.HintSize="434,159" sap2010:WorkflowViewState.IdRef="WriteCellX_10" Value="[workingDayCount.ToString]" />
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelApplicationCard.Body>
            </ueab:ExcelApplicationCard>
          </ActivityAction>
        </ueab:ExcelProcessScopeX.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ueab:ExcelProcessScopeX>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_64" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Statement sent flag updated to TRUE&quot;]" />
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_63" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Update statement sent flag in config: Completed&quot;]" />
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Bot will send an email to respective credit controller with number of contacts missing in the log " DisplayName="Broker contacts missing email" sap:VirtualizedContainerService.HintSize="496,123" sap2010:WorkflowViewState.IdRef="Sequence_51">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="CreateFile" />
        <Variable x:TypeArguments="sd:DataTable" Name="dt_DailySummary" />
        <Variable x:TypeArguments="x:String" Name="BodyFile" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_76" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Send Broker contacts missing email: Started&quot;]" />
      <Assign DisplayName="Assign - Filter unique credit controllers" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_24">
        <Assign.To>
          <OutArgument x:TypeArguments="sd:DataTable">[dt_BrokerDetails]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="sd:DataTable">[dt_BkrMissing.DefaultView.ToTable(True, "CC")]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_BrokerDetails]" DisplayName="For Each Row - Send email to Credit controller" sap:VirtualizedContainerService.HintSize="526,1751" sap2010:WorkflowViewState.IdRef="ForEachRow_10">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="492,1565" sap2010:WorkflowViewState.IdRef="Sequence_60">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="450,141" sap2010:WorkflowViewState.IdRef="LogMessage_80" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Send broker contact missing email started for - &quot; + row(&quot;CC&quot;).ToString]" />
              <ui:FilterDataTable DataTable="[dt_BkrMissing]" DisplayName="Filter - Broker contact missing DT" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="450,52" sap2010:WorkflowViewState.IdRef="FilterDataTable_7" OutputDataTable="[dt_Temp]" SelectColumnsMode="Remove">
                <ui:FilterDataTable.Filters>
                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                    <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                      <ui:FilterOperationArgument.Column>
                        <InArgument x:TypeArguments="x:String">["CC"]</InArgument>
                      </ui:FilterOperationArgument.Column>
                      <ui:FilterOperationArgument.Operand>
                        <InArgument x:TypeArguments="x:String">[row("CC").ToString]</InArgument>
                      </ui:FilterOperationArgument.Operand>
                    </ui:FilterOperationArgument>
                  </scg:List>
                </ui:FilterDataTable.Filters>
                <ui:FilterDataTable.SelectColumns>
                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                    <x:Null />
                  </scg:List>
                </ui:FilterDataTable.SelectColumns>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:FilterDataTable>
              <ui:RemoveDataColumn Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="CC" DataTable="[dt_Temp]" DisplayName="Remove - CC column" sap:VirtualizedContainerService.HintSize="450,52" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:RemoveDataColumn>
              <Assign DisplayName="Assign - Body file" sap:VirtualizedContainerService.HintSize="450,82" sap2010:WorkflowViewState.IdRef="Assign_25">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[CreateFile]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[in_LocalInputFolderPath + "\bodyFile.txt"]</InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
              <ui:CreateFile ContinueOnError="{x:Null}" Output="{x:Null}" Path="{x:Null}" DisplayName="Create - Body file" sap:VirtualizedContainerService.HintSize="450,52" sap2010:WorkflowViewState.IdRef="CreateFile_3" Name="[CreateFile]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:CreateFile>
              <ui:AppendLine File="{x:Null}" DisplayName="Append HTML tag" FileName="[CreateFile]" sap:VirtualizedContainerService.HintSize="450,52" sap2010:WorkflowViewState.IdRef="AppendLine_6" Text="&lt;html&gt;&#xA;&lt;style&gt;&#xA;th{&#xA; background-color: rgb(0,37,84); color: white; font-family: Times New Roman;&#xA;}&#xA;table,tr, td, th{&#xA;  border: 1px solid black; border-collapse: collapse; padding: 5px; font-family: Times New Roman;&#xA;}&#xA;.Yes{&#xA; background-color: green;&#xA;}&#xA;.No{&#xA; background-color: red;&#xA;}&#xA;&lt;/style&gt;&#xA;&lt;body&gt;&#xA;&lt;table&gt;" UseDefaultEncoding="False">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:AppendLine>
              <Sequence DisplayName="append data" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_59">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_Temp]" DisplayName="For each row - Broker contact missing DT" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="ForEachRow_11">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="300,232" sap2010:WorkflowViewState.IdRef="Sequence_58">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:AppendLine File="{x:Null}" DisplayName="Append line" FileName="[CreateFile]" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="AppendLine_7" Text="&lt;tr&gt;" UseDefaultEncoding="False">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:AppendLine>
                        <ui:ForEach x:TypeArguments="sd:DataColumn" CurrentIndex="{x:Null}" DisplayName="For each - Column" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[dt_Temp.Columns]">
                          <ui:ForEach.Body>
                            <ActivityAction x:TypeArguments="sd:DataColumn">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="sd:DataColumn" Name="data" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,221" sap2010:WorkflowViewState.IdRef="Sequence_57">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:AppendLine File="{x:Null}" DisplayName="Append line" FileName="[CreateFile]" sap:VirtualizedContainerService.HintSize="334,133" sap2010:WorkflowViewState.IdRef="AppendLine_8" Text="[String.Format(&quot;&lt;td Class = {0}&gt;{0}&lt;/td&gt;&quot;, row(data.ColumnName).ToString)]" UseDefaultEncoding="False" />
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEach.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:ForEach>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEachRow>
                <ui:AppendLine File="{x:Null}" DisplayName="Append line" FileName="[CreateFile]" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="AppendLine_9" Text="&lt;/tr&gt;" UseDefaultEncoding="False">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:AppendLine>
              </Sequence>
              <ui:AppendLine File="{x:Null}" DisplayName="Append HTML tag" FileName="[CreateFile]" sap:VirtualizedContainerService.HintSize="450,52" sap2010:WorkflowViewState.IdRef="AppendLine_10" Text="&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;" UseDefaultEncoding="False">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:AppendLine>
              <ui:ReadTextFile File="{x:Null}" Content="[BodyFile]" DisplayName="Read - Body file" FileName="[CreateFile]" sap:VirtualizedContainerService.HintSize="450,52" sap2010:WorkflowViewState.IdRef="ReadTextFile_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ReadTextFile>
              <ui:Delete ContinueOnError="{x:Null}" ResourceFile="{x:Null}" DisplayName="Delete - Body file" sap:VirtualizedContainerService.HintSize="450,52" sap2010:WorkflowViewState.IdRef="Delete_2" Path="[CreateFile]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:Delete>
              <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" ContinueOnError="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="[in_Config(&quot;BkrMissingMailBody&quot;).ToString.Replace(&quot;&lt;-bkrTable-&gt;&quot;,BodyFile)]" DisplayName="Send Contacts missing Email" sap:VirtualizedContainerService.HintSize="450,52" sap2010:WorkflowViewState.IdRef="SendOutlookMail_8" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" SentOnBehalfOfName="[in_Config(&quot;SentOnBehalf&quot;).ToString]" Subject="[in_Config(&quot;BkrMissingMailSubject&quot;).ToString]" To="[row(&quot;CC&quot;).ToString]">
                <ui:SendOutlookMail.Files>
                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                    <InArgument x:TypeArguments="x:String" />
                  </scg:List>
                </ui:SendOutlookMail.Files>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:SendOutlookMail>
              <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="450,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_11" MethodName="Collect" TargetType="s:GC">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </InvokeMethod>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="450,141" sap2010:WorkflowViewState.IdRef="LogMessage_81" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Send broker contact missing email completed for - &quot; + row(&quot;CC&quot;).ToString]" />
            </Sequence>
          </ActivityAction>
        </ui:ForEachRow.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEachRow>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_77" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Send Broker contacts missing email: Completed&quot;]" />
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="496,141" sap2010:WorkflowViewState.IdRef="LogMessage_66" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Generate broker statements: Completed&quot;]" />
  </Sequence>
</Activity>